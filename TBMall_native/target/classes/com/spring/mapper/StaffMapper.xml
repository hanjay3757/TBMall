<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.StaffMapper">
	<!-- resultType 에 복수형(ArrayList 등)을 적는게 아님. 
	그냥 dto 단수의 경로를 적어야됨. -->
	<!-- 모든 회원 정보 -->
	<select id="getList" resultType="com.spring.dto.StaffDto">
		SELECT 
			m.*,
			a.admin_no,
			a.delete_right_no
		FROM 
			tbmall_member m
			LEFT JOIN tbmall_admin a ON m.member_no = a.member_no
		WHERE 
			m.member_delete = 0 OR m.member_delete IS NULL
		ORDER BY 
			m.member_no DESC
	</select>
	
	<!-- 관리자 정보만 불러오기 -->
	<select id="getAdminList" resultType="com.spring.dto.StaffDto">
		SELECT * FROM tbmall_member
		INNER JOIN tbmall_admin on tbmall_member.member_no = tbmall_admin.member_no
	</select>
	
	<select id="read" resultType="com.spring.dto.StaffDto">
	select * from tbmall_member where member_no = #{member_no}
	</select>
	<!-- 관리자 임명 삭제권한 x-->
	<insert id="adminAppoint">
		INSERT INTO tbmall_admin (member_no, delete_right_no) values (#{member_no},0)
	</insert>
	
	<!-- 삭제 처리 (소프트 삭제) -->
	<update id="softDelete" parameterType="long">
		UPDATE tbmall_member 
		SET 
			member_delete = 1,
			member_delete_at = CURRENT_TIMESTAMP
		WHERE member_no = #{member_no}
	</update>
	
	<!-- 계정 복구 -->
	<update id="restore" parameterType="long">
		UPDATE tbmall_member 
		SET 
			member_delete = 0,
			member_delete_at = NULL
		WHERE member_no = #{member_no}
	</update>
	
	<!-- 삭제된 계정 목록 조회 -->
	<select id="getDeletedStaff" resultType="com.spring.dto.StaffDto">
		SELECT 
			m.member_no,
			m.member_id,
			m.member_nick,
			m.member_phone,
			m.member_email,
			m.member_delete,
			m.member_delete_at,
			a.admin_no,
			a.delete_right_no
		FROM 
			tbmall_member m
			LEFT JOIN tbmall_admin a ON m.member_no = a.member_no
			WHERE 
				m.member_delete = 1
	</select>
	
	<!-- 로그인 -->
	<select id="login" resultType="com.spring.dto.StaffDto">
		SELECT 
			m.*,
			a.admin_no,
			a.delete_right_no
		FROM 
			tbmall_member m
			LEFT JOIN tbmall_admin a ON m.member_no = a.member_no
		WHERE 
			m.member_id = #{member_id} 
			AND m.member_pw = #{member_pw}
			AND (m.member_delete = 0 OR m.member_delete IS NULL)
	</select>
	
	<!-- 관리자 권한 확인 -->
	<select id="checkAdminAuth" resultType="com.spring.dto.StaffDto">
		SELECT 
			m.*,
			a.admin_no,
			a.delete_right_no
		FROM 
			tbmall_member m
			INNER JOIN tbmall_admin a ON m.member_no = a.member_no
		WHERE 
			m.member_no = #{member_no}
			AND a.delete_right_no = 1
	</select>
	
	<!-- 계정정보 수정 -->
	<update id="update" parameterType="com.spring.dto.StaffDto">
		UPDATE tbmall_member 
		SET 
			member_nick = #{member_nick},
			member_pw = #{member_pw},
			member_phone = #{member_phone},
			member_email = #{member_email}
		WHERE member_no = #{member_no}
	</update>
	
	<!-- 아이디 중복 체크 -->
	<select id="checkIdDuplicate" resultType="int">
		SELECT COUNT(*) 
		FROM tbmall_member 
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 직원 등록 -->
	<insert id="register" parameterType="com.spring.dto.StaffDto" useGeneratedKeys="true" keyProperty="member_no">
		INSERT INTO tbmall_member (
			member_id,
			member_pw,
			member_nick,
			member_gender,
			member_birth,
			member_phone,
			member_email,
			member_joindate,
			member_delete
		) VALUES (
			#{member_id},
			#{member_pw},
			#{member_nick},
			#{member_gender},
			#{member_birth},
			#{member_phone},
			#{member_email},
			CURRENT_TIMESTAMP,
			0
		)
	</insert>
</mapper>