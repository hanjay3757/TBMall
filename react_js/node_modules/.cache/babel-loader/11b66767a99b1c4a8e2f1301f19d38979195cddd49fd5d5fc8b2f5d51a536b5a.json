{"ast":null,"code":"var _jsxFileName = \"C:\\\\JWH\\\\vsc\\\\study\\\\team\\\\src\\\\components\\\\ItemDetail.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport './ItemDetail.css';\nimport { SERVER_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemDetail({\n  userInfo\n}) {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    itemId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [item, setItem] = useState(null);\n  const [boards, setBoards] = useState([]);\n  const [newBoard, setNewBoard] = useState({\n    board_title: '',\n    board_content: ''\n  });\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [currentComment, setCurrentComment] = useState(1);\n  const [cpageSize, setCpageSize] = useState(5);\n  const [totalComment, setTotalComment] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  // 댓글 목록 로드 함수 정의\n  const loadComments = async (itemId, userInfo) => {\n    try {\n      console.log('댓글 목록 요청 - item_id:', itemId);\n      const response = await axios.get(`${SERVER_URL}/mvc/board/commentlist`, {\n        params: {\n          item_id: itemId,\n          currentComment: currentComment,\n          cpageSize: cpageSize\n        },\n        withCredentials: true\n      });\n      console.log('댓글 목록 응답:', response.data);\n      if (response.data && Array.isArray(response.data.comments)) {\n        setComments(response.data.comments);\n        setTotalComment(response.data.totalComment || 0);\n        setCurrentComment(response.data.currentComment || 1);\n      } else {\n        console.warn('댓글 데이터가 없거나 형식이 잘못되었습니다:', response.data);\n        setComments([]);\n        setTotalComment(0);\n      }\n    } catch (error) {\n      console.error('댓글 목록을 불러오는 중 오류 발생:', error);\n      setComments([]);\n      setTotalComment(0);\n    }\n  };\n\n  // checkLoginStatus 함수 수정\n  const checkLoginStatus = async () => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/mvc/staff/check-login`, {}, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('로그인 상태 확인 응답:', response.data);\n      if (response.data && response.data.isLoggedIn) {\n        setIsLoggedIn(true);\n        setIsAdmin(response.data.isAdmin);\n        localStorage.setItem('member_no', response.data.admin_no);\n        localStorage.setItem('member_role', response.data.isAdmin ? 'ROLE_ADMIN' : 'ROLE_USER');\n        const userInfo = {\n          member_nick: response.data.name || response.data.member_nick || response.data.memberNick,\n          points: response.data.points || 0,\n          position_no: response.data.position_no || 0,\n          isAdmin: response.data.isAdmin\n        };\n        setUserInfo(userInfo);\n      } else {\n        setIsLoggedIn(false);\n        setIsAdmin(false);\n        localStorage.removeItem('member_no');\n        localStorage.removeItem('member_role');\n        setUserInfo(null);\n      }\n    } catch (error) {\n      console.error('로그인 상태 확인 실패:', error);\n      setIsLoggedIn(false);\n      setIsAdmin(false);\n      setUserInfo(null);\n    }\n  };\n\n  // 상품 정보와 댓글 목록 로드\n  useEffect(() => {\n    // 장바구니 관련 리다이렉트 처리\n    const params = new URLSearchParams(location.search);\n    const redirectFrom = params.get('from');\n    if (redirectFrom === 'cart') {\n      return; // 장바구니에서 온 경우 상세 페이지 로드 중단\n    }\n    const loadItemDetail = async () => {\n      try {\n        const response = await axios.get(`${SERVER_URL}/mvc/stuff/item/detail/${itemId}`, {\n          withCredentials: true\n        });\n        if (response.data.status === 'success') {\n          setItem(response.data.item);\n        } else {\n          throw new Error('상품 정보를 불러오는데 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('상품 정보 로딩 실패:', error);\n        alert('상품 정보를 불러오는데 실패했습니다.');\n        setItem(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // 로그인 상태 체크 및 사용자 정보 로드\n    const memberNo = localStorage.getItem('member_no');\n    if (memberNo) {\n      setIsLoggedIn(true);\n      const memberRole = localStorage.getItem('member_role');\n      setIsAdmin(memberRole === 'ROLE_ADMIN');\n      setUserInfo({\n        member_no: memberNo,\n        member_role: memberRole\n      });\n      console.log('저장된 사용자 정보:', {\n        member_no: memberNo,\n        member_role: memberRole\n      });\n    }\n    const loadData = async () => {\n      try {\n        await checkLoginStatus(); // 비동기 함수로 변경\n        await loadItemDetail();\n        if (itemId) {\n          await loadComments(itemId);\n        }\n      } catch (error) {\n        console.error('데이터 로드 중 오류 발생:', error);\n      }\n    };\n    loadData();\n\n    // 로그인 상태 변경 감지를 위한 이벤트 리스너\n    window.addEventListener('storage', checkLoginStatus);\n    return () => {\n      window.removeEventListener('storage', checkLoginStatus);\n    };\n  }, [itemId, currentComment, location.search]);\n\n  // 댓글 작성 함수 수정\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) {\n      alert('댓글 내용을 입력해 주세요.');\n      return;\n    }\n    try {\n      const memberNo = localStorage.getItem('member_no');\n      if (!memberNo) {\n        alert('로그인이 필요한 서비스입니다.');\n        navigate('/staff/login');\n        return;\n      }\n\n      // 1. 먼저 세션에 상품 정보 저장\n      const sessionResponse = await axios.get(`${SERVER_URL}/mvc/board/comment`, {\n        params: {\n          item_id: Number(itemId) // Long 타입으로 변환\n        },\n        withCredentials: true\n      });\n      if (sessionResponse.data === 'redirect:/staff/login') {\n        alert('로그인이 필요한 서비스입니다.');\n        navigate('/staff/login');\n        return;\n      }\n\n      // 2. 댓글 작성 요청 - CommentDto와 일치하는 형식\n      const commentData = {\n        comment_content: newComment.trim() // 서버에서 필요한 필드만 전송\n      };\n      console.log('댓글 작성 요청 데이터:', commentData);\n      const response = await axios.post(`${SERVER_URL}/mvc/board/comment`, commentData, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('댓글 작성 응답:', response.data);\n      if (response.data.success) {\n        setNewComment('');\n        await loadComments(itemId);\n        alert('댓글이 등록되었습니다.');\n      } else {\n        throw new Error(response.data.message || '댓글 등록에 실패했습니다.');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('댓글 작성 중 오류 발생:', error);\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        alert('로그인이 필요한 서비스입니다.');\n        navigate('/staff/login');\n      } else {\n        var _error$response2, _error$response2$data;\n        alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  };\n\n  // 댓글 삭제 함수 수정\n  const handleDelete = async (item_id, member_no) => {\n    try {\n      console.log('=== 댓글 삭제 시작 ===');\n      console.log('삭제할 댓글 정보:', {\n        item_id,\n        member_no\n      });\n\n      // 관리자 권한 체크\n      const memberRole = localStorage.getItem('member_role');\n      if (memberRole !== 'ROLE_ADMIN') {\n        console.log('권한 체크 실패:', {\n          memberRole,\n          expected: 'ROLE_ADMIN'\n        });\n        alert('관리자만 댓글을 삭제할 수 있습니다.');\n        return;\n      }\n\n      // 삭제 확인\n      const confirmDelete = window.confirm('정말로 이 댓글을 삭제하시겠습니까?');\n      if (!confirmDelete) {\n        console.log('사용자가 삭제를 취소함');\n        return;\n      }\n      const deleteUrl = `${SERVER_URL}/mvc/board/comment/${item_id}/${member_no}`;\n      console.log('삭제 요청 URL:', deleteUrl);\n      const response = await axios.delete(deleteUrl, {\n        withCredentials: true\n      });\n      console.log('서버 응답:', response.data);\n      if (response.data.success) {\n        alert('댓글이 성공적으로 삭제되었습니다.');\n        await loadComments(itemId);\n      } else {\n        throw new Error(response.data.message || '댓글 삭제에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('댓글 삭제 오류:', error);\n      alert('댓글 삭제에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  const handleCommentPageChange = page => {\n    if (page >= 1 && page <= totalComment) {\n      setCurrentComment(page);\n    }\n  };\n\n  // 댓글 목록 표시 부분 추가\n  const renderComments = () => {\n    if (!comments || comments.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"\\uB4F1\\uB85D\\uB41C \\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 14\n      }, this);\n    }\n    const isAdminUser = (userInfo === null || userInfo === void 0 ? void 0 : userInfo.isAdmin) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.delete_right_no) === 1;\n    console.log('관리자 권한 체크:', {\n      userInfo,\n      isAdminUser,\n      memberRole: localStorage.getItem('member_role')\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-containers\",\n      children: [comments.map((comment, index) => {\n        console.log('댓글 데이터:', {\n          item_id: comment.item_id,\n          member_no: comment.member_no,\n          content: comment.comment_content,\n          writedate: comment.comment_writedate,\n          fullComment: comment\n        });\n\n        // item_id와 member_no로 고유 키 생성\n        const uniqueKey = `${comment.item_id}-${comment.member_no}-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-headers\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-authors\",\n              children: comment.member_nick || '익명'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-dates\",\n              children: new Date(comment.comment_writedate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-contents\",\n            children: comment.comment_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), isAdminUser && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('삭제 버튼 클릭:', {\n                item_id: comment.item_id,\n                member_no: comment.member_no,\n                content: comment.comment_content\n              });\n              // item_id와 member_no를 사용하여 댓글 식별\n              handleDelete(comment.item_id, comment.member_no);\n            },\n            className: \"delete-btns\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, uniqueKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentPageChange(currentComment - 1),\n          disabled: currentComment <= 1,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [currentComment, \" / \", totalComment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentPageChange(currentComment + 1),\n          disabled: currentComment >= totalComment,\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  };\n\n  // CommentForm 컴포넌트 수정\n  const CommentForm = () => {\n    _s();\n    const [localComment, setLocalComment] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const handleSubmit = async e => {\n      e.preventDefault();\n      if (isSubmitting) return;\n      if (!localComment.trim()) {\n        alert('댓글 내용을 입력해 주세요.');\n        return;\n      }\n      try {\n        setIsSubmitting(true);\n        console.log('=== 댓글 작성 시작 ===');\n        const memberNo = localStorage.getItem('member_no');\n        console.log('로그인 정보:', {\n          memberNo,\n          isLoggedIn: !!memberNo\n        });\n\n        // 1. 세션에 상품 정보 저장\n        console.log('세션 저장 요청 시작 - 파라미터:', {\n          item_id: Number(itemId)\n        });\n        const sessionResponse = await axios.get(`${SERVER_URL}/mvc/board/comment`, {\n          params: {\n            item_id: Number(itemId)\n          },\n          withCredentials: true\n        });\n        console.log('세션 저장 응답:', {\n          status: sessionResponse.status,\n          data: sessionResponse.data\n        });\n        if (sessionResponse.data === 'redirect:/staff/login') {\n          console.log('로그인 필요 - 리다이렉트');\n          alert('로그인이 필요한 서비스입니다.');\n          navigate('/staff/login');\n          return;\n        }\n\n        // 2. 댓글 작성 요청\n        const commentData = {\n          comment_content: localComment.trim() // 서버에서 필요한 필드만 전송\n        };\n        console.log('댓글 작성 요청 데이터:', commentData);\n        const response = await axios.post(`${SERVER_URL}/mvc/board/comment`, commentData, {\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('댓글 작성 응답:', {\n          status: response.status,\n          headers: response.headers,\n          data: response.data\n        });\n        if (response.data.success) {\n          console.log('댓글 작성 성공');\n          setLocalComment('');\n          await loadComments(itemId);\n          alert('댓글이 등록되었습니다.');\n        } else {\n          console.log('댓글 작성 실패:', response.data.message);\n          throw new Error(response.data.message);\n        }\n      } catch (error) {\n        var _error$response3, _error$response4;\n        console.error('=== 댓글 작성 오류 상세 ===');\n        console.error('오류 타입:', error.name);\n        console.error('오류 메시지:', error.message);\n        console.error('서버 응답:', (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data);\n        console.error('요청 설정:', error.config);\n        console.error('전체 오류:', error);\n        if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n          alert('로그인이 필요한 서비스입니다.');\n          navigate('/staff/login');\n        } else {\n          var _error$response5, _error$response5$data;\n          alert(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\n        }\n      } finally {\n        setIsSubmitting(false);\n        console.log('=== 댓글 작성 종료 ===');\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"comment-forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: localComment,\n        onChange: e => setLocalComment(e.target.value),\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        required: true,\n        disabled: isSubmitting,\n        rows: 4,\n        className: \"comment-textareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submits\",\n        disabled: isSubmitting,\n        children: isSubmitting ? '등록 중...' : '댓글 작성'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 수정 버튼 핸들러 추가\n  _s(CommentForm, \"9OEAhiTqDaG4LfOXPHQhv9nOJIM=\");\n  const handleEdit = async item_id => {\n    try {\n      console.log('=== 상품 수정 시작 ===');\n      console.log('수정할 상품 ID:', item_id);\n\n      // 관리자 권한 체크\n      if (!isAdmin) {\n        alert('관리자만 수정할 수 있습니다.');\n        return;\n      }\n      navigate(`/stuff/item/edit?itemId=${item_id}`);\n    } catch (error) {\n      console.error('상품 수정 페이지 이동 중 오류:', error);\n      alert('상품 수정 페이지로 이동할 수 없습니다.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 12\n    }, this);\n  }\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC0C1\\uD488\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-detail-containers\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-imagess\",\n        children: item !== null && item !== void 0 && item.image_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image_url,\n          alt: item.item_name,\n          onError: e => {\n            e.target.src = 'https://via.placeholder.com/400x200';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/400x200\",\n          alt: \"\\uAE30\\uBCF8 \\uC774\\uBBF8\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-infos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item === null || item === void 0 ? void 0 : item.item_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"prices\",\n          children: [\"\\uAC00\\uACA9: \", ((item === null || item === void 0 ? void 0 : item.item_price) || 0).toLocaleString(), \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stocks\",\n          children: [\"\\uC7AC\\uACE0: \", ((item === null || item === void 0 ? void 0 : item.item_stock) || 0).toLocaleString(), \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"descriptions\",\n          children: item === null || item === void 0 ? void 0 : item.item_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 11\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(item === null || item === void 0 ? void 0 : item.item_id),\n          className: \"edit-buttonss\",\n          style: {\n            padding: '15px 15px',\n            fontSize: '0.8rem',\n            marginBottom: '10px'\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-requireds\",\n        children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this), renderComments()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n}\n_s2(ItemDetail, \"OW2MdHNP6OMs4ujh08VWd18IdSE=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = ItemDetail;\nexport default ItemDetail;\nvar _c;\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","useLocation","SERVER_URL","jsxDEV","_jsxDEV","ItemDetail","userInfo","_s2","_s","$RefreshSig$","itemId","navigate","location","item","setItem","boards","setBoards","newBoard","setNewBoard","board_title","board_content","comments","setComments","newComment","setNewComment","currentComment","setCurrentComment","cpageSize","setCpageSize","totalComment","setTotalComment","loading","setLoading","currentPage","setCurrentPage","pageSize","setPageSize","totalPages","setTotalPages","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","loadComments","console","log","response","get","params","item_id","withCredentials","data","Array","isArray","warn","error","checkLoginStatus","post","headers","localStorage","admin_no","member_nick","name","memberNick","points","position_no","setUserInfo","removeItem","URLSearchParams","search","redirectFrom","loadItemDetail","status","Error","alert","memberNo","getItem","memberRole","member_no","member_role","loadData","window","addEventListener","removeEventListener","handleCommentSubmit","e","preventDefault","trim","sessionResponse","Number","commentData","comment_content","success","message","_error$response","_error$response2","_error$response2$data","handleDelete","expected","confirmDelete","confirm","deleteUrl","delete","handleCommentPageChange","page","renderComments","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isAdminUser","delete_right_no","map","comment","index","content","writedate","comment_writedate","fullComment","uniqueKey","Date","toLocaleDateString","onClick","disabled","CommentForm","localComment","setLocalComment","isSubmitting","setIsSubmitting","handleSubmit","_error$response3","_error$response4","config","_error$response5","_error$response5$data","onSubmit","value","onChange","target","placeholder","required","rows","type","handleEdit","image_url","src","alt","item_name","onError","item_price","toLocaleString","item_stock","item_description","style","display","justifyContent","alignItems","padding","fontSize","marginBottom","_c","$RefreshReg$"],"sources":["C:/JWH/vsc/study/team/src/components/ItemDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport './ItemDetail.css';\r\nimport { SERVER_URL } from '../config';\r\nfunction ItemDetail({ userInfo }) {\r\n  const { itemId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [item, setItem] = useState(null);\r\n  const [boards, setBoards] = useState([]);\r\n  const [newBoard, setNewBoard] = useState({\r\n    board_title: '',\r\n    board_content: ''\r\n  });\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [currentComment, setCurrentComment] = useState(1);\r\n  const [cpageSize, setCpageSize] = useState(5);\r\n  const [totalComment, setTotalComment] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  // 댓글 목록 로드 함수 정의\r\n  const loadComments = async (itemId, userInfo) => {\r\n    try {\r\n      console.log('댓글 목록 요청 - item_id:', itemId);\r\n      \r\n      \r\n      const response = await axios.get(`${SERVER_URL}/mvc/board/commentlist`, {\r\n        params: { \r\n          item_id: itemId,\r\n          currentComment: currentComment, \r\n          cpageSize: cpageSize \r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      console.log('댓글 목록 응답:', response.data);\r\n\r\n      if (response.data && Array.isArray(response.data.comments)) {\r\n        setComments(response.data.comments);\r\n        setTotalComment(response.data.totalComment || 0);\r\n        setCurrentComment(response.data.currentComment || 1);\r\n      } else {\r\n        console.warn('댓글 데이터가 없거나 형식이 잘못되었습니다:', response.data);\r\n        setComments([]);\r\n        setTotalComment(0);\r\n      }\r\n    } catch (error) {\r\n      console.error('댓글 목록을 불러오는 중 오류 발생:', error);\r\n      setComments([]);\r\n      setTotalComment(0);\r\n    }\r\n  };\r\n\r\n  // checkLoginStatus 함수 수정\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      const response = await axios.post(`${SERVER_URL}/mvc/staff/check-login`, {}, {\r\n        withCredentials: true,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('로그인 상태 확인 응답:', response.data);\r\n      \r\n      if (response.data && response.data.isLoggedIn) {\r\n        setIsLoggedIn(true);\r\n        setIsAdmin(response.data.isAdmin);\r\n        localStorage.setItem('member_no', response.data.admin_no);\r\n        localStorage.setItem('member_role', response.data.isAdmin ? 'ROLE_ADMIN' : 'ROLE_USER');\r\n        const userInfo = {\r\n          member_nick: response.data.name || response.data.member_nick || response.data.memberNick,\r\n          points: response.data.points || 0,\r\n          position_no: response.data.position_no || 0,\r\n          isAdmin: response.data.isAdmin\r\n        };\r\n        setUserInfo(userInfo);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n        setIsAdmin(false);\r\n        localStorage.removeItem('member_no');\r\n        localStorage.removeItem('member_role');\r\n        setUserInfo(null);\r\n      }\r\n    } catch (error) {\r\n      console.error('로그인 상태 확인 실패:', error);\r\n      setIsLoggedIn(false);\r\n      setIsAdmin(false);\r\n      setUserInfo(null);\r\n    }\r\n  };\r\n\r\n  // 상품 정보와 댓글 목록 로드\r\n  useEffect(() => {\r\n    // 장바구니 관련 리다이렉트 처리\r\n    const params = new URLSearchParams(location.search);\r\n    const redirectFrom = params.get('from');\r\n    if (redirectFrom === 'cart') {\r\n      return; // 장바구니에서 온 경우 상세 페이지 로드 중단\r\n    }\r\n\r\n    const loadItemDetail = async () => {\r\n      try {\r\n        const response = await axios.get(`${SERVER_URL}/mvc/stuff/item/detail/${itemId}`, {\r\n          withCredentials: true\r\n        });\r\n        \r\n        if (response.data.status === 'success') {\r\n          setItem(response.data.item);\r\n        } else {\r\n          throw new Error('상품 정보를 불러오는데 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        console.error('상품 정보 로딩 실패:', error);\r\n        alert('상품 정보를 불러오는데 실패했습니다.');\r\n        setItem(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // 로그인 상태 체크 및 사용자 정보 로드\r\n    const memberNo = localStorage.getItem('member_no');\r\n    if (memberNo) {\r\n      setIsLoggedIn(true);\r\n      const memberRole = localStorage.getItem('member_role');\r\n      setIsAdmin(memberRole === 'ROLE_ADMIN');\r\n      setUserInfo({\r\n        member_no: memberNo,\r\n        member_role: memberRole\r\n      });\r\n      console.log('저장된 사용자 정보:', {\r\n        member_no: memberNo,\r\n        member_role: memberRole\r\n      });\r\n    }\r\n\r\n    const loadData = async () => {\r\n      try {\r\n        await checkLoginStatus(); // 비동기 함수로 변경\r\n        await loadItemDetail();\r\n        if (itemId) {\r\n          await loadComments(itemId);\r\n        }\r\n      } catch (error) {\r\n        console.error('데이터 로드 중 오류 발생:', error);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n\r\n    // 로그인 상태 변경 감지를 위한 이벤트 리스너\r\n    window.addEventListener('storage', checkLoginStatus);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', checkLoginStatus);\r\n    };\r\n  }, [itemId, currentComment, location.search]);\r\n\r\n  // 댓글 작성 함수 수정\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newComment.trim()) {\r\n      alert('댓글 내용을 입력해 주세요.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const memberNo = localStorage.getItem('member_no');\r\n      if (!memberNo) {\r\n        alert('로그인이 필요한 서비스입니다.');\r\n        navigate('/staff/login');\r\n        return;\r\n      }\r\n\r\n      // 1. 먼저 세션에 상품 정보 저장\r\n      const sessionResponse = await axios.get(\r\n        `${SERVER_URL}/mvc/board/comment`,\r\n        {\r\n          params: { \r\n            item_id: Number(itemId)  // Long 타입으로 변환\r\n          },\r\n          withCredentials: true\r\n        }\r\n      );\r\n\r\n      if (sessionResponse.data === 'redirect:/staff/login') {\r\n        alert('로그인이 필요한 서비스입니다.');\r\n        navigate('/staff/login');\r\n        return;\r\n      }\r\n\r\n      // 2. 댓글 작성 요청 - CommentDto와 일치하는 형식\r\n      const commentData = {\r\n        comment_content: newComment.trim()  // 서버에서 필요한 필드만 전송\r\n      };\r\n\r\n      console.log('댓글 작성 요청 데이터:', commentData);\r\n\r\n      const response = await axios.post(\r\n        `${SERVER_URL}/mvc/board/comment`,\r\n        commentData,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      console.log('댓글 작성 응답:', response.data);\r\n\r\n      if (response.data.success) {\r\n        setNewComment('');\r\n        await loadComments(itemId);\r\n        alert('댓글이 등록되었습니다.');\r\n      } else {\r\n        throw new Error(response.data.message || '댓글 등록에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('댓글 작성 중 오류 발생:', error);\r\n      if (error.response?.status === 401) {\r\n        alert('로그인이 필요한 서비스입니다.');\r\n        navigate('/staff/login');\r\n      } else {\r\n        alert(error.response?.data?.message || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // 댓글 삭제 함수 수정\r\n  const handleDelete = async (item_id, member_no) => {\r\n    try {\r\n      console.log('=== 댓글 삭제 시작 ===');\r\n      console.log('삭제할 댓글 정보:', {\r\n        item_id,\r\n        member_no\r\n      });\r\n\r\n      // 관리자 권한 체크\r\n      const memberRole = localStorage.getItem('member_role');\r\n      if (memberRole !== 'ROLE_ADMIN') {\r\n        console.log('권한 체크 실패:', {\r\n          memberRole,\r\n          expected: 'ROLE_ADMIN'\r\n        });\r\n        alert('관리자만 댓글을 삭제할 수 있습니다.');\r\n        return;\r\n      }\r\n\r\n      // 삭제 확인\r\n      const confirmDelete = window.confirm('정말로 이 댓글을 삭제하시겠습니까?');\r\n      if (!confirmDelete) {\r\n        console.log('사용자가 삭제를 취소함');\r\n        return;\r\n      }\r\n\r\n      const deleteUrl = `${SERVER_URL}/mvc/board/comment/${item_id}/${member_no}`;\r\n      console.log('삭제 요청 URL:', deleteUrl);\r\n\r\n      const response = await axios.delete(deleteUrl, {\r\n        withCredentials: true\r\n      });\r\n\r\n      console.log('서버 응답:', response.data);\r\n\r\n      if (response.data.success) {\r\n        alert('댓글이 성공적으로 삭제되었습니다.');\r\n        await loadComments(itemId);\r\n      } else {\r\n        throw new Error(response.data.message || '댓글 삭제에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('댓글 삭제 오류:', error);\r\n      alert('댓글 삭제에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleCommentPageChange = (page) => {\r\n    if (page >= 1 && page <= totalComment) {\r\n      setCurrentComment(page);\r\n    }\r\n  };\r\n\r\n  // 댓글 목록 표시 부분 추가\r\n  const renderComments = () => {\r\n    if (!comments || comments.length === 0) {\r\n      return <p className=\"no-comments\">등록된 댓글이 없습니다.</p>;\r\n    }\r\n\r\n    const isAdminUser = userInfo?.isAdmin || userInfo?.delete_right_no === 1;\r\n\r\n    console.log('관리자 권한 체크:', {\r\n      userInfo,\r\n      isAdminUser,\r\n      memberRole: localStorage.getItem('member_role')\r\n    });\r\n\r\n    return (\r\n      <div className=\"comments-containers\">\r\n        {comments.map((comment, index) => {\r\n          console.log('댓글 데이터:', {\r\n            item_id: comment.item_id,\r\n            member_no: comment.member_no,\r\n            content: comment.comment_content,\r\n            writedate: comment.comment_writedate,\r\n            fullComment: comment\r\n          });\r\n\r\n          // item_id와 member_no로 고유 키 생성\r\n          const uniqueKey = `${comment.item_id}-${comment.member_no}-${index}`;\r\n\r\n          return (\r\n            <div key={uniqueKey} className=\"comment-items\">\r\n              <div className=\"comment-headers\">\r\n                <span className=\"comment-authors\">{comment.member_nick || '익명'}</span>\r\n                <span className=\"comment-dates\">\r\n                  {new Date(comment.comment_writedate).toLocaleDateString()}\r\n                </span>\r\n              </div>\r\n              <p className=\"comment-contents\">{comment.comment_content}</p>\r\n              {isAdminUser && (\r\n                <button\r\n                  onClick={() => {\r\n                    console.log('삭제 버튼 클릭:', {\r\n                      item_id: comment.item_id,\r\n                      member_no: comment.member_no,\r\n                      content: comment.comment_content\r\n                    });\r\n                    // item_id와 member_no를 사용하여 댓글 식별\r\n                    handleDelete(comment.item_id, comment.member_no);\r\n                  }}\r\n                  className=\"delete-btns\"\r\n                >\r\n                  삭제\r\n                </button>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        {/* 페이지네이션 */}\r\n        <div className=\"pagination\">\r\n          <button\r\n            onClick={() => handleCommentPageChange(currentComment - 1)}\r\n            disabled={currentComment <= 1}\r\n          >\r\n            이전\r\n          </button>\r\n          <span>{currentComment} / {totalComment}</span>\r\n          <button\r\n            onClick={() => handleCommentPageChange(currentComment + 1)}\r\n            disabled={currentComment >= totalComment}\r\n          >\r\n            다음\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // CommentForm 컴포넌트 수정\r\n  const CommentForm = () => {\r\n    const [localComment, setLocalComment] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (isSubmitting) return;\r\n\r\n      if (!localComment.trim()) {\r\n        alert('댓글 내용을 입력해 주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setIsSubmitting(true);\r\n        console.log('=== 댓글 작성 시작 ===');\r\n        \r\n        const memberNo = localStorage.getItem('member_no');\r\n        console.log('로그인 정보:', {\r\n          memberNo,\r\n          isLoggedIn: !!memberNo\r\n        });\r\n\r\n        // 1. 세션에 상품 정보 저장\r\n        console.log('세션 저장 요청 시작 - 파라미터:', {\r\n          item_id: Number(itemId)\r\n        });\r\n\r\n        const sessionResponse = await axios.get(\r\n          `${SERVER_URL}/mvc/board/comment`,\r\n          {\r\n            params: { \r\n              item_id: Number(itemId)\r\n            },\r\n            withCredentials: true\r\n          }\r\n        );\r\n\r\n        console.log('세션 저장 응답:', {\r\n          status: sessionResponse.status,\r\n          data: sessionResponse.data\r\n        });\r\n\r\n        if (sessionResponse.data === 'redirect:/staff/login') {\r\n          console.log('로그인 필요 - 리다이렉트');\r\n          alert('로그인이 필요한 서비스입니다.');\r\n          navigate('/staff/login');\r\n          return;\r\n        }\r\n\r\n        // 2. 댓글 작성 요청\r\n        const commentData = {\r\n          comment_content: localComment.trim()  // 서버에서 필요한 필드만 전송\r\n        };\r\n\r\n        console.log('댓글 작성 요청 데이터:', commentData);\r\n\r\n        const response = await axios.post(\r\n          `${SERVER_URL}/mvc/board/comment`,\r\n          commentData,\r\n          {\r\n            withCredentials: true,\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n        );\r\n\r\n        console.log('댓글 작성 응답:', {\r\n          status: response.status,\r\n          headers: response.headers,\r\n          data: response.data\r\n        });\r\n\r\n        if (response.data.success) {\r\n          console.log('댓글 작성 성공');\r\n          setLocalComment('');\r\n          await loadComments(itemId);\r\n          alert('댓글이 등록되었습니다.');\r\n        } else {\r\n          console.log('댓글 작성 실패:', response.data.message);\r\n          throw new Error(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        console.error('=== 댓글 작성 오류 상세 ===');\r\n        console.error('오류 타입:', error.name);\r\n        console.error('오류 메시지:', error.message);\r\n        console.error('서버 응답:', error.response?.data);\r\n        console.error('요청 설정:', error.config);\r\n        console.error('전체 오류:', error);\r\n\r\n        if (error.response?.status === 401) {\r\n          alert('로그인이 필요한 서비스입니다.');\r\n          navigate('/staff/login');\r\n        } else {\r\n          alert(error.response?.data?.message || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\r\n        }\r\n      } finally {\r\n        setIsSubmitting(false);\r\n        console.log('=== 댓글 작성 종료 ===');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className=\"comment-forms\">\r\n        <textarea\r\n          value={localComment}\r\n          onChange={(e) => setLocalComment(e.target.value)}\r\n          placeholder=\"댓글을 입력하세요...\"\r\n          required\r\n          disabled={isSubmitting}\r\n          rows={4}\r\n          className=\"comment-textareas\"\r\n        />\r\n        <button type=\"submits\" disabled={isSubmitting}>\r\n          {isSubmitting ? '등록 중...' : '댓글 작성'}\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  // 수정 버튼 핸들러 추가\r\n  const handleEdit = async (item_id) => {\r\n    try {\r\n      console.log('=== 상품 수정 시작 ===');\r\n      console.log('수정할 상품 ID:', item_id);\r\n      \r\n      // 관리자 권한 체크\r\n      if (!isAdmin) {\r\n        alert('관리자만 수정할 수 있습니다.');\r\n        return;\r\n      }\r\n\r\n      navigate(`/stuff/item/edit?itemId=${item_id}`);\r\n    } catch (error) {\r\n      console.error('상품 수정 페이지 이동 중 오류:', error);\r\n      alert('상품 수정 페이지로 이동할 수 없습니다.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (!item) {\r\n    return <div>상품을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-detail-containers\">\r\n      <div className=\"item-details\">\r\n        <div className=\"item-imagess\">\r\n          {item?.image_url ? (\r\n            <img \r\n              src={item.image_url}\r\n              alt={item.item_name}\r\n              onError={(e) => {\r\n                e.target.src = 'https://via.placeholder.com/400x200';\r\n              }}\r\n            />\r\n          ) : (\r\n            <img \r\n              src='https://via.placeholder.com/400x200'\r\n              alt=\"기본 이미지\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"item-infos\">\r\n          <h2>{item?.item_name}</h2>\r\n          <p className=\"prices\">가격: {(item?.item_price || 0).toLocaleString()}원</p>\r\n          <p className=\"stocks\">재고: {(item?.item_stock || 0).toLocaleString()}개</p>\r\n          <p className=\"descriptions\">{item?.item_description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"comments-sections\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <h3></h3>\r\n          {isAdmin && (\r\n            <button \r\n              onClick={() => handleEdit(item?.item_id)}\r\n              className=\"edit-buttonss\"\r\n              style={{ padding: '15px 15px', fontSize: '0.8rem' , marginBottom: '10px'}}\r\n            >\r\n              수정\r\n            </button>\r\n\r\n          )}\r\n        </div>\r\n        {isLoggedIn ? <CommentForm /> : (\r\n          <p className=\"login-requireds\">\r\n            댓글을 작성하려면 로그인이 필요합니다.\r\n          </p>\r\n        )}\r\n        {renderComments()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAO,kBAAkB;AACzB,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,SAASC,UAAUA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChC,MAAM;IAAEC;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IACvCuB,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC+B,SAAS,EAAEC,YAAY,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqC,WAAW,EAAEC,cAAc,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACuC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC6C,OAAO,EAAEC,UAAU,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM+C,YAAY,GAAG,MAAAA,CAAOjC,MAAM,EAAEJ,QAAQ,KAAK;IAC/C,IAAI;MACFsC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEnC,MAAM,CAAC;MAG1C,MAAMoC,QAAQ,GAAG,MAAMhD,KAAK,CAACiD,GAAG,CAAC,GAAG7C,UAAU,wBAAwB,EAAE;QACtE8C,MAAM,EAAE;UACNC,OAAO,EAAEvC,MAAM;UACfe,cAAc,EAAEA,cAAc;UAC9BE,SAAS,EAAEA;QACb,CAAC;QACDuB,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFN,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAACK,IAAI,CAAC;MAEvC,IAAIL,QAAQ,CAACK,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACP,QAAQ,CAACK,IAAI,CAAC9B,QAAQ,CAAC,EAAE;QAC1DC,WAAW,CAACwB,QAAQ,CAACK,IAAI,CAAC9B,QAAQ,CAAC;QACnCS,eAAe,CAACgB,QAAQ,CAACK,IAAI,CAACtB,YAAY,IAAI,CAAC,CAAC;QAChDH,iBAAiB,CAACoB,QAAQ,CAACK,IAAI,CAAC1B,cAAc,IAAI,CAAC,CAAC;MACtD,CAAC,MAAM;QACLmB,OAAO,CAACU,IAAI,CAAC,0BAA0B,EAAER,QAAQ,CAACK,IAAI,CAAC;QACvD7B,WAAW,CAAC,EAAE,CAAC;QACfQ,eAAe,CAAC,CAAC,CAAC;MACpB;IACF,CAAC,CAAC,OAAOyB,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CjC,WAAW,CAAC,EAAE,CAAC;MACfQ,eAAe,CAAC,CAAC,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAM0B,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMhD,KAAK,CAAC2D,IAAI,CAAC,GAAGvD,UAAU,wBAAwB,EAAE,CAAC,CAAC,EAAE;QAC3EgD,eAAe,EAAE,IAAI;QACrBQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFd,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACK,IAAI,CAAC;MAE3C,IAAIL,QAAQ,CAACK,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACZ,UAAU,EAAE;QAC7CC,aAAa,CAAC,IAAI,CAAC;QACnBE,UAAU,CAACI,QAAQ,CAACK,IAAI,CAACV,OAAO,CAAC;QACjCkB,YAAY,CAAC7C,OAAO,CAAC,WAAW,EAAEgC,QAAQ,CAACK,IAAI,CAACS,QAAQ,CAAC;QACzDD,YAAY,CAAC7C,OAAO,CAAC,aAAa,EAAEgC,QAAQ,CAACK,IAAI,CAACV,OAAO,GAAG,YAAY,GAAG,WAAW,CAAC;QACvF,MAAMnC,QAAQ,GAAG;UACfuD,WAAW,EAAEf,QAAQ,CAACK,IAAI,CAACW,IAAI,IAAIhB,QAAQ,CAACK,IAAI,CAACU,WAAW,IAAIf,QAAQ,CAACK,IAAI,CAACY,UAAU;UACxFC,MAAM,EAAElB,QAAQ,CAACK,IAAI,CAACa,MAAM,IAAI,CAAC;UACjCC,WAAW,EAAEnB,QAAQ,CAACK,IAAI,CAACc,WAAW,IAAI,CAAC;UAC3CxB,OAAO,EAAEK,QAAQ,CAACK,IAAI,CAACV;QACzB,CAAC;QACDyB,WAAW,CAAC5D,QAAQ,CAAC;MACvB,CAAC,MAAM;QACLkC,aAAa,CAAC,KAAK,CAAC;QACpBE,UAAU,CAAC,KAAK,CAAC;QACjBiB,YAAY,CAACQ,UAAU,CAAC,WAAW,CAAC;QACpCR,YAAY,CAACQ,UAAU,CAAC,aAAa,CAAC;QACtCD,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCf,aAAa,CAAC,KAAK,CAAC;MACpBE,UAAU,CAAC,KAAK,CAAC;MACjBwB,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;;EAED;EACArE,SAAS,CAAC,MAAM;IACd;IACA,MAAMmD,MAAM,GAAG,IAAIoB,eAAe,CAACxD,QAAQ,CAACyD,MAAM,CAAC;IACnD,MAAMC,YAAY,GAAGtB,MAAM,CAACD,GAAG,CAAC,MAAM,CAAC;IACvC,IAAIuB,YAAY,KAAK,MAAM,EAAE;MAC3B,OAAO,CAAC;IACV;IAEA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMzB,QAAQ,GAAG,MAAMhD,KAAK,CAACiD,GAAG,CAAC,GAAG7C,UAAU,0BAA0BQ,MAAM,EAAE,EAAE;UAChFwC,eAAe,EAAE;QACnB,CAAC,CAAC;QAEF,IAAIJ,QAAQ,CAACK,IAAI,CAACqB,MAAM,KAAK,SAAS,EAAE;UACtC1D,OAAO,CAACgC,QAAQ,CAACK,IAAI,CAACtC,IAAI,CAAC;QAC7B,CAAC,MAAM;UACL,MAAM,IAAI4D,KAAK,CAAC,sBAAsB,CAAC;QACzC;MACF,CAAC,CAAC,OAAOlB,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCmB,KAAK,CAAC,sBAAsB,CAAC;QAC7B5D,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,SAAS;QACRkB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;;IAED;IACA,MAAM2C,QAAQ,GAAGhB,YAAY,CAACiB,OAAO,CAAC,WAAW,CAAC;IAClD,IAAID,QAAQ,EAAE;MACZnC,aAAa,CAAC,IAAI,CAAC;MACnB,MAAMqC,UAAU,GAAGlB,YAAY,CAACiB,OAAO,CAAC,aAAa,CAAC;MACtDlC,UAAU,CAACmC,UAAU,KAAK,YAAY,CAAC;MACvCX,WAAW,CAAC;QACVY,SAAS,EAAEH,QAAQ;QACnBI,WAAW,EAAEF;MACf,CAAC,CAAC;MACFjC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE;QACzBiC,SAAS,EAAEH,QAAQ;QACnBI,WAAW,EAAEF;MACf,CAAC,CAAC;IACJ;IAEA,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMxB,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC1B,MAAMe,cAAc,CAAC,CAAC;QACtB,IAAI7D,MAAM,EAAE;UACV,MAAMiC,YAAY,CAACjC,MAAM,CAAC;QAC5B;MACF,CAAC,CAAC,OAAO6C,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACzC;IACF,CAAC;IAEDyB,QAAQ,CAAC,CAAC;;IAEV;IACAC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE1B,gBAAgB,CAAC;IAEpD,OAAO,MAAM;MACXyB,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAE3B,gBAAgB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAAC9C,MAAM,EAAEe,cAAc,EAAEb,QAAQ,CAACyD,MAAM,CAAC,CAAC;;EAE7C;EACA,MAAMe,mBAAmB,GAAG,MAAOC,CAAC,IAAK;IACvCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC/D,UAAU,CAACgE,IAAI,CAAC,CAAC,EAAE;MACtBb,KAAK,CAAC,iBAAiB,CAAC;MACxB;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAGhB,YAAY,CAACiB,OAAO,CAAC,WAAW,CAAC;MAClD,IAAI,CAACD,QAAQ,EAAE;QACbD,KAAK,CAAC,kBAAkB,CAAC;QACzB/D,QAAQ,CAAC,cAAc,CAAC;QACxB;MACF;;MAEA;MACA,MAAM6E,eAAe,GAAG,MAAM1F,KAAK,CAACiD,GAAG,CACrC,GAAG7C,UAAU,oBAAoB,EACjC;QACE8C,MAAM,EAAE;UACNC,OAAO,EAAEwC,MAAM,CAAC/E,MAAM,CAAC,CAAE;QAC3B,CAAC;QACDwC,eAAe,EAAE;MACnB,CACF,CAAC;MAED,IAAIsC,eAAe,CAACrC,IAAI,KAAK,uBAAuB,EAAE;QACpDuB,KAAK,CAAC,kBAAkB,CAAC;QACzB/D,QAAQ,CAAC,cAAc,CAAC;QACxB;MACF;;MAEA;MACA,MAAM+E,WAAW,GAAG;QAClBC,eAAe,EAAEpE,UAAU,CAACgE,IAAI,CAAC,CAAC,CAAE;MACtC,CAAC;MAED3C,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE6C,WAAW,CAAC;MAEzC,MAAM5C,QAAQ,GAAG,MAAMhD,KAAK,CAAC2D,IAAI,CAC/B,GAAGvD,UAAU,oBAAoB,EACjCwF,WAAW,EACX;QACExC,eAAe,EAAE,IAAI;QACrBQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDd,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAACK,IAAI,CAAC;MAEvC,IAAIL,QAAQ,CAACK,IAAI,CAACyC,OAAO,EAAE;QACzBpE,aAAa,CAAC,EAAE,CAAC;QACjB,MAAMmB,YAAY,CAACjC,MAAM,CAAC;QAC1BgE,KAAK,CAAC,cAAc,CAAC;MACvB,CAAC,MAAM;QACL,MAAM,IAAID,KAAK,CAAC3B,QAAQ,CAACK,IAAI,CAAC0C,OAAO,IAAI,gBAAgB,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOtC,KAAK,EAAE;MAAA,IAAAuC,eAAA;MACdlD,OAAO,CAACW,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,IAAI,EAAAuC,eAAA,GAAAvC,KAAK,CAACT,QAAQ,cAAAgD,eAAA,uBAAdA,eAAA,CAAgBtB,MAAM,MAAK,GAAG,EAAE;QAClCE,KAAK,CAAC,kBAAkB,CAAC;QACzB/D,QAAQ,CAAC,cAAc,CAAC;MAC1B,CAAC,MAAM;QAAA,IAAAoF,gBAAA,EAAAC,qBAAA;QACLtB,KAAK,CAAC,EAAAqB,gBAAA,GAAAxC,KAAK,CAACT,QAAQ,cAAAiD,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB5C,IAAI,cAAA6C,qBAAA,uBAApBA,qBAAA,CAAsBH,OAAO,KAAI,2BAA2B,CAAC;MACrE;IACF;EACF,CAAC;;EAED;EACA,MAAMI,YAAY,GAAG,MAAAA,CAAOhD,OAAO,EAAE6B,SAAS,KAAK;IACjD,IAAI;MACFlC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;QACxBI,OAAO;QACP6B;MACF,CAAC,CAAC;;MAEF;MACA,MAAMD,UAAU,GAAGlB,YAAY,CAACiB,OAAO,CAAC,aAAa,CAAC;MACtD,IAAIC,UAAU,KAAK,YAAY,EAAE;QAC/BjC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;UACvBgC,UAAU;UACVqB,QAAQ,EAAE;QACZ,CAAC,CAAC;QACFxB,KAAK,CAAC,sBAAsB,CAAC;QAC7B;MACF;;MAEA;MACA,MAAMyB,aAAa,GAAGlB,MAAM,CAACmB,OAAO,CAAC,qBAAqB,CAAC;MAC3D,IAAI,CAACD,aAAa,EAAE;QAClBvD,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAC3B;MACF;MAEA,MAAMwD,SAAS,GAAG,GAAGnG,UAAU,sBAAsB+C,OAAO,IAAI6B,SAAS,EAAE;MAC3ElC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEwD,SAAS,CAAC;MAEpC,MAAMvD,QAAQ,GAAG,MAAMhD,KAAK,CAACwG,MAAM,CAACD,SAAS,EAAE;QAC7CnD,eAAe,EAAE;MACnB,CAAC,CAAC;MAEFN,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,QAAQ,CAACK,IAAI,CAAC;MAEpC,IAAIL,QAAQ,CAACK,IAAI,CAACyC,OAAO,EAAE;QACzBlB,KAAK,CAAC,oBAAoB,CAAC;QAC3B,MAAM/B,YAAY,CAACjC,MAAM,CAAC;MAC5B,CAAC,MAAM;QACL,MAAM,IAAI+D,KAAK,CAAC3B,QAAQ,CAACK,IAAI,CAAC0C,OAAO,IAAI,gBAAgB,CAAC;MAC5D;IACF,CAAC,CAAC,OAAOtC,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;MACjCmB,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAM6B,uBAAuB,GAAIC,IAAI,IAAK;IACxC,IAAIA,IAAI,IAAI,CAAC,IAAIA,IAAI,IAAI3E,YAAY,EAAE;MACrCH,iBAAiB,CAAC8E,IAAI,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACpF,QAAQ,IAAIA,QAAQ,CAACqF,MAAM,KAAK,CAAC,EAAE;MACtC,oBAAOtG,OAAA;QAAGuG,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACrD;IAEA,MAAMC,WAAW,GAAG,CAAA3G,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEmC,OAAO,KAAI,CAAAnC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4G,eAAe,MAAK,CAAC;IAExEtE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;MACxBvC,QAAQ;MACR2G,WAAW;MACXpC,UAAU,EAAElB,YAAY,CAACiB,OAAO,CAAC,aAAa;IAChD,CAAC,CAAC;IAEF,oBACExE,OAAA;MAAKuG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,GACjCvF,QAAQ,CAAC8F,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;QAChCzE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;UACrBI,OAAO,EAAEmE,OAAO,CAACnE,OAAO;UACxB6B,SAAS,EAAEsC,OAAO,CAACtC,SAAS;UAC5BwC,OAAO,EAAEF,OAAO,CAACzB,eAAe;UAChC4B,SAAS,EAAEH,OAAO,CAACI,iBAAiB;UACpCC,WAAW,EAAEL;QACf,CAAC,CAAC;;QAEF;QACA,MAAMM,SAAS,GAAG,GAAGN,OAAO,CAACnE,OAAO,IAAImE,OAAO,CAACtC,SAAS,IAAIuC,KAAK,EAAE;QAEpE,oBACEjH,OAAA;UAAqBuG,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5CxG,OAAA;YAAKuG,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9BxG,OAAA;cAAMuG,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAEQ,OAAO,CAACvD,WAAW,IAAI;YAAI;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtE5G,OAAA;cAAMuG,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC5B,IAAIe,IAAI,CAACP,OAAO,CAACI,iBAAiB,CAAC,CAACI,kBAAkB,CAAC;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACN5G,OAAA;YAAGuG,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAEQ,OAAO,CAACzB;UAAe;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC5DC,WAAW,iBACV7G,OAAA;YACEyH,OAAO,EAAEA,CAAA,KAAM;cACbjF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;gBACvBI,OAAO,EAAEmE,OAAO,CAACnE,OAAO;gBACxB6B,SAAS,EAAEsC,OAAO,CAACtC,SAAS;gBAC5BwC,OAAO,EAAEF,OAAO,CAACzB;cACnB,CAAC,CAAC;cACF;cACAM,YAAY,CAACmB,OAAO,CAACnE,OAAO,EAAEmE,OAAO,CAACtC,SAAS,CAAC;YAClD,CAAE;YACF6B,SAAS,EAAC,aAAa;YAAAC,QAAA,EACxB;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA,GAvBOU,SAAS;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBd,CAAC;MAEV,CAAC,CAAC,eAGF5G,OAAA;QAAKuG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxG,OAAA;UACEyH,OAAO,EAAEA,CAAA,KAAMtB,uBAAuB,CAAC9E,cAAc,GAAG,CAAC,CAAE;UAC3DqG,QAAQ,EAAErG,cAAc,IAAI,CAAE;UAAAmF,QAAA,EAC/B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5G,OAAA;UAAAwG,QAAA,GAAOnF,cAAc,EAAC,KAAG,EAACI,YAAY;QAAA;UAAAgF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC9C5G,OAAA;UACEyH,OAAO,EAAEA,CAAA,KAAMtB,uBAAuB,CAAC9E,cAAc,GAAG,CAAC,CAAE;UAC3DqG,QAAQ,EAAErG,cAAc,IAAII,YAAa;UAAA+E,QAAA,EAC1C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA,MAAMe,WAAW,GAAGA,CAAA,KAAM;IAAAvH,EAAA;IACxB,MAAM,CAACwH,YAAY,EAAEC,eAAe,CAAC,GAAGrI,QAAQ,CAAC,EAAE,CAAC;IACpD,MAAM,CAACsI,YAAY,EAAEC,eAAe,CAAC,GAAGvI,QAAQ,CAAC,KAAK,CAAC;IAEvD,MAAMwI,YAAY,GAAG,MAAO/C,CAAC,IAAK;MAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClB,IAAI4C,YAAY,EAAE;MAElB,IAAI,CAACF,YAAY,CAACzC,IAAI,CAAC,CAAC,EAAE;QACxBb,KAAK,CAAC,iBAAiB,CAAC;QACxB;MACF;MAEA,IAAI;QACFyD,eAAe,CAAC,IAAI,CAAC;QACrBvF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAE/B,MAAM8B,QAAQ,GAAGhB,YAAY,CAACiB,OAAO,CAAC,WAAW,CAAC;QAClDhC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE;UACrB8B,QAAQ;UACRpC,UAAU,EAAE,CAAC,CAACoC;QAChB,CAAC,CAAC;;QAEF;QACA/B,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE;UACjCI,OAAO,EAAEwC,MAAM,CAAC/E,MAAM;QACxB,CAAC,CAAC;QAEF,MAAM8E,eAAe,GAAG,MAAM1F,KAAK,CAACiD,GAAG,CACrC,GAAG7C,UAAU,oBAAoB,EACjC;UACE8C,MAAM,EAAE;YACNC,OAAO,EAAEwC,MAAM,CAAC/E,MAAM;UACxB,CAAC;UACDwC,eAAe,EAAE;QACnB,CACF,CAAC;QAEDN,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;UACvB2B,MAAM,EAAEgB,eAAe,CAAChB,MAAM;UAC9BrB,IAAI,EAAEqC,eAAe,CAACrC;QACxB,CAAC,CAAC;QAEF,IAAIqC,eAAe,CAACrC,IAAI,KAAK,uBAAuB,EAAE;UACpDP,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;UAC7B6B,KAAK,CAAC,kBAAkB,CAAC;UACzB/D,QAAQ,CAAC,cAAc,CAAC;UACxB;QACF;;QAEA;QACA,MAAM+E,WAAW,GAAG;UAClBC,eAAe,EAAEqC,YAAY,CAACzC,IAAI,CAAC,CAAC,CAAE;QACxC,CAAC;QAED3C,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE6C,WAAW,CAAC;QAEzC,MAAM5C,QAAQ,GAAG,MAAMhD,KAAK,CAAC2D,IAAI,CAC/B,GAAGvD,UAAU,oBAAoB,EACjCwF,WAAW,EACX;UACExC,eAAe,EAAE,IAAI;UACrBQ,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAEDd,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;UACvB2B,MAAM,EAAE1B,QAAQ,CAAC0B,MAAM;UACvBd,OAAO,EAAEZ,QAAQ,CAACY,OAAO;UACzBP,IAAI,EAAEL,QAAQ,CAACK;QACjB,CAAC,CAAC;QAEF,IAAIL,QAAQ,CAACK,IAAI,CAACyC,OAAO,EAAE;UACzBhD,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;UACvBoF,eAAe,CAAC,EAAE,CAAC;UACnB,MAAMtF,YAAY,CAACjC,MAAM,CAAC;UAC1BgE,KAAK,CAAC,cAAc,CAAC;QACvB,CAAC,MAAM;UACL9B,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,QAAQ,CAACK,IAAI,CAAC0C,OAAO,CAAC;UAC/C,MAAM,IAAIpB,KAAK,CAAC3B,QAAQ,CAACK,IAAI,CAAC0C,OAAO,CAAC;QACxC;MACF,CAAC,CAAC,OAAOtC,KAAK,EAAE;QAAA,IAAA8E,gBAAA,EAAAC,gBAAA;QACd1F,OAAO,CAACW,KAAK,CAAC,qBAAqB,CAAC;QACpCX,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACO,IAAI,CAAC;QACnClB,OAAO,CAACW,KAAK,CAAC,SAAS,EAAEA,KAAK,CAACsC,OAAO,CAAC;QACvCjD,OAAO,CAACW,KAAK,CAAC,QAAQ,GAAA8E,gBAAA,GAAE9E,KAAK,CAACT,QAAQ,cAAAuF,gBAAA,uBAAdA,gBAAA,CAAgBlF,IAAI,CAAC;QAC7CP,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACgF,MAAM,CAAC;QACrC3F,OAAO,CAACW,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAE9B,IAAI,EAAA+E,gBAAA,GAAA/E,KAAK,CAACT,QAAQ,cAAAwF,gBAAA,uBAAdA,gBAAA,CAAgB9D,MAAM,MAAK,GAAG,EAAE;UAClCE,KAAK,CAAC,kBAAkB,CAAC;UACzB/D,QAAQ,CAAC,cAAc,CAAC;QAC1B,CAAC,MAAM;UAAA,IAAA6H,gBAAA,EAAAC,qBAAA;UACL/D,KAAK,CAAC,EAAA8D,gBAAA,GAAAjF,KAAK,CAACT,QAAQ,cAAA0F,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBrF,IAAI,cAAAsF,qBAAA,uBAApBA,qBAAA,CAAsB5C,OAAO,KAAI,2BAA2B,CAAC;QACrE;MACF,CAAC,SAAS;QACRsC,eAAe,CAAC,KAAK,CAAC;QACtBvF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACjC;IACF,CAAC;IAED,oBACEzC,OAAA;MAAMsI,QAAQ,EAAEN,YAAa;MAACzB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACrDxG,OAAA;QACEuI,KAAK,EAAEX,YAAa;QACpBY,QAAQ,EAAGvD,CAAC,IAAK4C,eAAe,CAAC5C,CAAC,CAACwD,MAAM,CAACF,KAAK,CAAE;QACjDG,WAAW,EAAC,sDAAc;QAC1BC,QAAQ;QACRjB,QAAQ,EAAEI,YAAa;QACvBc,IAAI,EAAE,CAAE;QACRrC,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACF5G,OAAA;QAAQ6I,IAAI,EAAC,SAAS;QAACnB,QAAQ,EAAEI,YAAa;QAAAtB,QAAA,EAC3CsB,YAAY,GAAG,SAAS,GAAG;MAAO;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEX,CAAC;;EAED;EAAAxG,EAAA,CAzHMuH,WAAW;EA0HjB,MAAMmB,UAAU,GAAG,MAAOjG,OAAO,IAAK;IACpC,IAAI;MACFL,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEI,OAAO,CAAC;;MAElC;MACA,IAAI,CAACR,OAAO,EAAE;QACZiC,KAAK,CAAC,kBAAkB,CAAC;QACzB;MACF;MAEA/D,QAAQ,CAAC,2BAA2BsC,OAAO,EAAE,CAAC;IAChD,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CmB,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,IAAI3C,OAAO,EAAE;IACX,oBAAO3B,OAAA;MAAAwG,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3B;EAEA,IAAI,CAACnG,IAAI,EAAE;IACT,oBAAOT,OAAA;MAAAwG,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClC;EAEA,oBACE5G,OAAA;IAAKuG,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCxG,OAAA;MAAKuG,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BxG,OAAA;QAAKuG,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1B/F,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEsI,SAAS,gBACd/I,OAAA;UACEgJ,GAAG,EAAEvI,IAAI,CAACsI,SAAU;UACpBE,GAAG,EAAExI,IAAI,CAACyI,SAAU;UACpBC,OAAO,EAAGlE,CAAC,IAAK;YACdA,CAAC,CAACwD,MAAM,CAACO,GAAG,GAAG,qCAAqC;UACtD;QAAE;UAAAvC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAEF5G,OAAA;UACEgJ,GAAG,EAAC,qCAAqC;UACzCC,GAAG,EAAC;QAAQ;UAAAxC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MACF;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN5G,OAAA;QAAKuG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxG,OAAA;UAAAwG,QAAA,EAAK/F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEyI;QAAS;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1B5G,OAAA;UAAGuG,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,gBAAI,EAAC,CAAC,CAAA/F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE2I,UAAU,KAAI,CAAC,EAAEC,cAAc,CAAC,CAAC,EAAC,QAAC;QAAA;UAAA5C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzE5G,OAAA;UAAGuG,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,gBAAI,EAAC,CAAC,CAAA/F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE6I,UAAU,KAAI,CAAC,EAAED,cAAc,CAAC,CAAC,EAAC,QAAC;QAAA;UAAA5C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzE5G,OAAA;UAAGuG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAE/F,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE8I;QAAgB;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN5G,OAAA;MAAKuG,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCxG,OAAA;QAAKwJ,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,eAAe;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAnD,QAAA,gBACrFxG,OAAA;UAAAyG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRvE,OAAO,iBACNrC,OAAA;UACEyH,OAAO,EAAEA,CAAA,KAAMqB,UAAU,CAACrI,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoC,OAAO,CAAE;UACzC0D,SAAS,EAAC,eAAe;UACzBiD,KAAK,EAAE;YAAEI,OAAO,EAAE,WAAW;YAAEC,QAAQ,EAAE,QAAQ;YAAGC,YAAY,EAAE;UAAM,CAAE;UAAAtD,QAAA,EAC3E;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAET;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,EACLzE,UAAU,gBAAGnC,OAAA,CAAC2H,WAAW;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAC3B5G,OAAA;QAAGuG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAE/B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACJ,EACAP,cAAc,CAAC,CAAC;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACzG,GAAA,CAnjBQF,UAAU;EAAA,QACEN,SAAS,EACXC,WAAW,EACXC,WAAW;AAAA;AAAAkK,EAAA,GAHrB9J,UAAU;AAqjBnB,eAAeA,UAAU;AAAC,IAAA8J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}