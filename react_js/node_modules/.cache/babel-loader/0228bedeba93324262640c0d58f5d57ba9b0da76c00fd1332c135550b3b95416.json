{"ast":null,"code":"var _jsxFileName = \"C:\\\\JWH\\\\vsc\\\\study\\\\team\\\\src\\\\components\\\\ItemList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport './ItemDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemList({\n  isLoggedIn,\n  isAdmin\n}) {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [items, setItems] = useState([]);\n  const [quantities, setQuantities] = useState({});\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [rotations, setRotations] = useState({});\n  // 현재 페이지 번호를 관리하는 state\n  const [currentPage, setCurrentPage] = useState(1);\n  // 한 페이지당 보여줄 아이템 개수\n  const [pageSize] = useState(8);\n  // 전체 페이지 수를 관리하는 state\n  const [totalPage, setTotalPage] = useState(0);\n  const cardRefs = useRef({});\n\n  // 페이지나 새로고침 키가 변경될 때마다 아이템 목록을 다시 불러옴\n  useEffect(() => {\n    loadItems(currentPage);\n  }, [refreshKey, currentPage]);\n\n  // location state에 refresh가 있으면 현재 페이지의 아이템을 다시 불러옴\n  useEffect(() => {\n    var _location$state;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.refresh) {\n      loadItems(currentPage);\n    }\n  }, [location, currentPage]);\n  const loadItems = async page => {\n    try {\n      setLoading(true);\n      // 서버에 현재 페이지와 페이지 크기를 파라미터로 전달하여 해당 페이지의 아이템만 요청\n      const response = await axios.get('/stuff/item/list', {\n        params: {\n          currentPage: page,\n          pageSize\n        },\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n\n      // 서버로부터 받은 아이템 데이터와 전체 페이지 수를 추출\n      const {\n        items: itemsToProcess,\n        totalPage\n      } = response.data;\n      console.log('서버에서 받은 아이템 데이터:', itemsToProcess);\n\n      // 재고가 0인 아이템은 장바구니에 있는지 확인 후 삭제 처리\n      for (const item of itemsToProcess) {\n        if (item.item_stock === 0 && !item.item_delete) {\n          try {\n            // GET 메서드로 장바구니 조회\n            const cartResponse = await axios.get('/stuff/api/cart', {\n              withCredentials: true,\n              headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n              }\n            });\n            if (cartResponse.data && Array.isArray(cartResponse.data)) {\n              const isInCart = cartResponse.data.some(cartItem => cartItem.itemId === item.item_id);\n              if (!isInCart) {\n                const params = new URLSearchParams();\n                params.append('item_id', item.item_id);\n                await axios.post('/stuff/item/delete', params, {\n                  withCredentials: true,\n                  headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded'\n                  }\n                });\n              }\n            }\n          } catch (error) {\n            console.error('아이템 처리 중 오류:', error);\n          }\n        }\n      }\n\n      // 중복 제거 및 활성 아이템 필터링\n      const uniqueItems = Array.from(new Map(itemsToProcess.map(item => [item.item_id, item])).values());\n\n      // 활성 아이템 필터링 - 삭제되지 않고 재고가 있는 아이템만 표시\n      const activeItems = uniqueItems.filter(item => {\n        // 삭제되지 않고 재고가 있는 아이템만 표시\n        return !item.item_delete && item.item_stock > 0;\n      });\n\n      // 필터링된 아이템 목록과 전체 페이지 수를 state에 저장\n      setItems(activeItems);\n      setTotalPage(totalPage);\n      const initialQuantities = {};\n      activeItems.forEach(item => {\n        initialQuantities[item.item_id] = 1;\n      });\n      setQuantities(initialQuantities);\n    } catch (error) {\n      console.error('아이템 목록 로딩 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 페이지 변경 처리 함수\n  const handlePageChange = page => {\n    // 유효한 페이지 범위인지 확인\n    if (page < 1 || page > totalPage) return;\n    // 현재 페이지 업데이트\n    setCurrentPage(page);\n    // 새로운 페이지의 아이템 목록 로드\n    loadItems(page);\n  };\n  const refreshList = () => {\n    setRefreshKey(prevKey => prevKey + 1);\n  };\n  const handleDelete = async item_id => {\n    try {\n      if (!isAdmin) {\n        alert('관리자 권한이 필요합니다.');\n        return;\n      }\n      if (!item_id) {\n        alert(\"삭제할 물건이 없습니다.\");\n        return;\n      }\n      if (window.confirm('이 물건을 삭제하시겠습니까?')) {\n        const params = new URLSearchParams();\n        params.append('item_id', item_id);\n        const response = await axios.post('/stuff/item/delete', params, {\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        });\n        if (response.data === 'redirect:/stuff/item/list' || response.status === 200 || response.data.success) {\n          alert('물건이 삭제되었습니다.');\n          loadItems();\n        } else {\n          alert(response.data.message || '삭제에 실패했습니다.');\n        }\n      }\n    } catch (error) {\n      alert('물건 삭제 중 오류가 발생했습니다.');\n    }\n  };\n  const handleQuantityChange = (itemId, value) => {\n    const item = items.find(item => item.item_id === itemId);\n    if (!item) return;\n    const newQuantity = Math.max(1, Math.min(value, item.item_stock));\n    setQuantities(prev => ({\n      ...prev,\n      [itemId]: newQuantity\n    }));\n  };\n  const handleAddToCart = async (itemId, quantity) => {\n    try {\n      if (!isLoggedIn) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n\n      // 현재 아이템의 재고 확인\n      const item = items.find(item => item.item_id === itemId);\n      if (!item || item.item_stock <= 0) {\n        alert('재고가 부족합니다.');\n        return;\n      }\n      const params = new URLSearchParams();\n      params.append('itemId', itemId);\n      params.append('quantity', quantity);\n      const response = await axios.post('/stuff/api/cart/add', params, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      if (response.data.status === 'success') {\n        alert(response.data.message);\n        // 서버의 최신 상태를 가져옴\n        loadItems();\n      } else {\n        throw new Error(response.data.message);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('장바구니 추가 중 오류:', error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || '장바구니 추가에 실패했습니다.');\n    }\n  };\n  const handleMouseMove = (itemId, e) => {\n    if (!cardRefs.current[itemId]) return;\n    const card = cardRefs.current[itemId];\n    const rect = card.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const centerX = rect.width / 2;\n    const centerY = rect.height / 2;\n    const rotateX = -((y - centerY) / 10) * 0.5;\n    const rotateY = (x - centerX) / 10 * 0.5;\n    setRotations(prev => ({\n      ...prev,\n      [itemId]: {\n        x: rotateX,\n        y: rotateY\n      }\n    }));\n  };\n  const handleMouseLeave = itemId => {\n    setRotations(prev => ({\n      ...prev,\n      [itemId]: {\n        x: 0,\n        y: 0\n      }\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uBB3C\\uAC74 \\uBAA9\\uB85D\\uC744 \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-container\",\n      children: items.map(item => {\n        var _rotations$item$item_, _rotations$item$item_2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: el => cardRefs.current[item.item_id] = el,\n          className: \"item-card\",\n          onClick: () => navigate(`/stuff/item/${item.item_id}`),\n          onMouseMove: e => handleMouseMove(item.item_id, e),\n          onMouseLeave: () => handleMouseLeave(item.item_id),\n          style: {\n            cursor: 'pointer',\n            transform: `\n                perspective(1000px)\n                rotateX(${((_rotations$item$item_ = rotations[item.item_id]) === null || _rotations$item$item_ === void 0 ? void 0 : _rotations$item$item_.x) || 0}deg)\n                rotateY(${((_rotations$item$item_2 = rotations[item.item_id]) === null || _rotations$item$item_2 === void 0 ? void 0 : _rotations$item$item_2.y) || 0}deg)\n                translateZ(20px)\n              `,\n            transition: 'transform 0.3s ease'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-image\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.image_url || 'https://via.placeholder.com/400x200',\n              alt: item.item_name,\n              onError: e => {\n                console.log('이미지 로드 실패:', item.image_url); // 이미지 로드 실패 시 로그\n                e.target.src = 'https://via.placeholder.com/400x200';\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.item_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uAC00\\uACA9: \", item.item_price.toLocaleString(), \"\\uC6D0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uC7AC\\uACE0: \", item.item_stock.toLocaleString(), \"\\uAC1C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.item_description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"admin-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => navigate(`/stuff/item/edit?itemId=${item.item_id}`),\n                className: \"edit-button\",\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(item.item_id),\n                className: \"delete-button\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), isLoggedIn && item.item_stock > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cart-controls\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"1\",\n                max: item.item_stock,\n                value: quantities[item.item_id] || 1,\n                onChange: e => handleQuantityChange(item.item_id, parseInt(e.target.value)),\n                className: \"quantity-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddToCart(item.item_id, quantities[item.item_id] || 1),\n                className: \"add-to-cart-button\",\n                children: \"\\uC7A5\\uBC14\\uAD6C\\uB2C8\\uC5D0 \\uCD94\\uAC00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)]\n        }, item.item_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage - 1),\n        disabled: currentPage === 1,\n        children: \"\\uC774\\uC804\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), Array.from({\n        length: totalPage\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(index + 1),\n        className: currentPage === index + 1 ? 'active' : '' // 현재 페이지 강조\n        ,\n        children: index + 1\n      }, index + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePageChange(currentPage + 1),\n        disabled: currentPage === totalPage,\n        children: \"\\uB2E4\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemList, \"GCVVKMPI5VbCSAbxVG6tPDGt28s=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","ItemList","isLoggedIn","isAdmin","_s","navigate","location","items","setItems","quantities","setQuantities","refreshKey","setRefreshKey","loading","setLoading","rotations","setRotations","currentPage","setCurrentPage","pageSize","totalPage","setTotalPage","cardRefs","loadItems","_location$state","state","refresh","page","response","get","params","withCredentials","headers","itemsToProcess","data","console","log","item","item_stock","item_delete","cartResponse","Array","isArray","isInCart","some","cartItem","itemId","item_id","URLSearchParams","append","post","error","uniqueItems","from","Map","map","values","activeItems","filter","initialQuantities","forEach","handlePageChange","refreshList","prevKey","handleDelete","alert","window","confirm","status","success","message","handleQuantityChange","value","find","newQuantity","Math","max","min","prev","handleAddToCart","quantity","Error","_error$response","_error$response$data","handleMouseMove","e","current","card","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","centerX","width","centerY","height","rotateX","rotateY","handleMouseLeave","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_rotations$item$item_","_rotations$item$item_2","ref","el","onClick","onMouseMove","onMouseLeave","style","cursor","transform","transition","src","image_url","alt","item_name","onError","target","item_price","toLocaleString","item_description","type","onChange","parseInt","disabled","length","_","index","_c","$RefreshReg$"],"sources":["C:/JWH/vsc/study/team/src/components/ItemList.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport './ItemDetail.css';\r\n\r\nfunction ItemList({ isLoggedIn, isAdmin }) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [items, setItems] = useState([]);\r\n  const [quantities, setQuantities] = useState({});\r\n  const [refreshKey, setRefreshKey] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [rotations, setRotations] = useState({});\r\n  // 현재 페이지 번호를 관리하는 state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // 한 페이지당 보여줄 아이템 개수\r\n  const [pageSize] = useState(8);\r\n  // 전체 페이지 수를 관리하는 state\r\n  const [totalPage, setTotalPage] = useState(0);\r\n  const cardRefs = useRef({});\r\n\r\n  // 페이지나 새로고침 키가 변경될 때마다 아이템 목록을 다시 불러옴\r\n  useEffect(() => {\r\n    loadItems(currentPage);\r\n  }, [refreshKey, currentPage]);\r\n\r\n  // location state에 refresh가 있으면 현재 페이지의 아이템을 다시 불러옴\r\n  useEffect(() => {\r\n    if (location.state?.refresh) {\r\n      loadItems(currentPage);\r\n    }\r\n  }, [location, currentPage]);\r\n\r\n  const loadItems = async (page) => {\r\n    try {\r\n      setLoading(true);\r\n      // 서버에 현재 페이지와 페이지 크기를 파라미터로 전달하여 해당 페이지의 아이템만 요청\r\n      const response = await axios.get('/stuff/item/list', {\r\n        params: {\r\n          currentPage: page,\r\n          pageSize\r\n        },\r\n        withCredentials: true,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n        }\r\n      });\r\n\r\n      // 서버로부터 받은 아이템 데이터와 전체 페이지 수를 추출\r\n      const {items: itemsToProcess, totalPage} = response.data;\r\n      console.log('서버에서 받은 아이템 데이터:', itemsToProcess);\r\n\r\n      // 재고가 0인 아이템은 장바구니에 있는지 확인 후 삭제 처리\r\n      for (const item of itemsToProcess) {\r\n        if (item.item_stock === 0 && !item.item_delete) {\r\n          try {\r\n            // GET 메서드로 장바구니 조회\r\n            const cartResponse = await axios.get('/stuff/api/cart', {\r\n              withCredentials: true,\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n              }\r\n            });\r\n            \r\n            if (cartResponse.data && Array.isArray(cartResponse.data)) {\r\n              const isInCart = cartResponse.data.some(cartItem => cartItem.itemId === item.item_id);\r\n              \r\n              if (!isInCart) {\r\n                const params = new URLSearchParams();\r\n                params.append('item_id', item.item_id);\r\n                \r\n                await axios.post('/stuff/item/delete', params, {\r\n                  withCredentials: true,\r\n                  headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          } catch (error) {\r\n            console.error('아이템 처리 중 오류:', error);\r\n          }\r\n        }\r\n      }\r\n      \r\n      // 중복 제거 및 활성 아이템 필터링\r\n      const uniqueItems = Array.from(new Map(\r\n        itemsToProcess.map(item => [item.item_id, item])\r\n      ).values());\r\n\r\n      // 활성 아이템 필터링 - 삭제되지 않고 재고가 있는 아이템만 표시\r\n      const activeItems = uniqueItems.filter(item => {\r\n        // 삭제되지 않고 재고가 있는 아이템만 표시\r\n        return !item.item_delete && item.item_stock > 0;\r\n      });\r\n\r\n      // 필터링된 아이템 목록과 전체 페이지 수를 state에 저장\r\n      setItems(activeItems);\r\n      setTotalPage(totalPage);\r\n      \r\n      const initialQuantities = {};\r\n      activeItems.forEach(item => {\r\n        initialQuantities[item.item_id] = 1;\r\n      });\r\n      setQuantities(initialQuantities);\r\n    } catch (error) {\r\n      console.error('아이템 목록 로딩 실패:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 페이지 변경 처리 함수\r\n  const handlePageChange = (page) => {\r\n    // 유효한 페이지 범위인지 확인\r\n    if (page < 1 || page > totalPage) return;\r\n    // 현재 페이지 업데이트\r\n    setCurrentPage(page);\r\n    // 새로운 페이지의 아이템 목록 로드\r\n    loadItems(page);\r\n  };\r\n\r\n  const refreshList = () => {\r\n    setRefreshKey(prevKey => prevKey + 1);\r\n  };\r\n\r\n  const handleDelete = async (item_id) => {\r\n    try {\r\n      if (!isAdmin) {\r\n        alert('관리자 권한이 필요합니다.');\r\n        return;\r\n      }\r\n      if(!item_id){\r\n        alert(\"삭제할 물건이 없습니다.\")\r\n        return;\r\n      }\r\n\r\n      if (window.confirm('이 물건을 삭제하시겠습니까?')) {\r\n        const params = new URLSearchParams();\r\n        params.append('item_id', item_id);\r\n        \r\n        const response = await axios.post(\r\n          '/stuff/item/delete', \r\n          params,\r\n          { \r\n            withCredentials: true,\r\n            headers: {\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n          }\r\n        );\r\n\r\n        if (response.data === 'redirect:/stuff/item/list' || \r\n            response.status === 200 || \r\n            response.data.success) {\r\n          alert('물건이 삭제되었습니다.');\r\n          loadItems();\r\n        } else {\r\n          alert(response.data.message || '삭제에 실패했습니다.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert('물건 삭제 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange = (itemId, value) => {\r\n    const item = items.find(item => item.item_id === itemId);\r\n    if (!item) return;\r\n\r\n    const newQuantity = Math.max(1, Math.min(value, item.item_stock));\r\n    setQuantities(prev => ({\r\n      ...prev,\r\n      [itemId]: newQuantity\r\n    }));\r\n  };\r\n\r\n  const handleAddToCart = async (itemId, quantity) => {\r\n    try {\r\n      if (!isLoggedIn) {\r\n        alert('로그인이 필요합니다.');\r\n        return;\r\n      }\r\n\r\n      // 현재 아이템의 재고 확인\r\n      const item = items.find(item => item.item_id === itemId);\r\n      if (!item || item.item_stock <= 0) {\r\n        alert('재고가 부족합니다.');\r\n        return;\r\n      }\r\n\r\n      const params = new URLSearchParams();\r\n      params.append('itemId', itemId);\r\n      params.append('quantity', quantity);\r\n\r\n      const response = await axios.post(\r\n        '/stuff/api/cart/add',\r\n        params,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.data.status === 'success') {\r\n        alert(response.data.message);\r\n        // 서버의 최신 상태를 가져옴\r\n        loadItems();\r\n      } else {\r\n        throw new Error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('장바구니 추가 중 오류:', error);\r\n      alert(error.response?.data?.message || '장바구니 추가에 실패했습니다.');\r\n    }\r\n  };\r\n\r\n  const handleMouseMove = (itemId, e) => {\r\n    if (!cardRefs.current[itemId]) return;\r\n\r\n    const card = cardRefs.current[itemId];\r\n    const rect = card.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const centerX = rect.width / 2;\r\n    const centerY = rect.height / 2;\r\n\r\n    const rotateX = -((y - centerY) / 10) * 0.5;\r\n    const rotateY = ((x - centerX) / 10) * 0.5;\r\n\r\n    setRotations(prev => ({\r\n      ...prev,\r\n      [itemId]: { x: rotateX, y: rotateY }\r\n    }));\r\n  };\r\n\r\n  const handleMouseLeave = (itemId) => {\r\n    setRotations(prev => ({\r\n      ...prev,\r\n      [itemId]: { x: 0, y: 0 }\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"item-list\">\r\n        <div className=\"loading-spinner\">\r\n          <p>물건 목록을 불러오는 중...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-list\">\r\n      <div className=\"items-container\">\r\n        {items.map(item => (\r\n          <div\r\n            key={item.item_id}\r\n            ref={el => cardRefs.current[item.item_id] = el}\r\n            className=\"item-card\"\r\n            onClick={() => navigate(`/stuff/item/${item.item_id}`)}\r\n            onMouseMove={(e) => handleMouseMove(item.item_id, e)}\r\n            onMouseLeave={() => handleMouseLeave(item.item_id)}\r\n            style={{\r\n              cursor: 'pointer',\r\n              transform: `\r\n                perspective(1000px)\r\n                rotateX(${rotations[item.item_id]?.x || 0}deg)\r\n                rotateY(${rotations[item.item_id]?.y || 0}deg)\r\n                translateZ(20px)\r\n              `,\r\n              transition: 'transform 0.3s ease'\r\n            }}\r\n          >\r\n            <div className=\"item-image\">\r\n              <img \r\n                src={item.image_url || 'https://via.placeholder.com/400x200'} \r\n                alt={item.item_name}\r\n                onError={(e) => {\r\n                  console.log('이미지 로드 실패:', item.image_url); // 이미지 로드 실패 시 로그\r\n                  e.target.src = 'https://via.placeholder.com/400x200';\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item-content\">\r\n              <h3>{item.item_name}</h3>\r\n              <p>가격: {item.item_price.toLocaleString()}원</p>\r\n              <p>재고: {item.item_stock.toLocaleString()}개</p>\r\n              <p>{item.item_description}</p>\r\n              \r\n              {isAdmin && (\r\n                <div className=\"admin-controls\">\r\n                  <button \r\n                    onClick={() => navigate(`/stuff/item/edit?itemId=${item.item_id}`)}\r\n                    className=\"edit-button\"\r\n                  >\r\n                    수정\r\n                  </button>\r\n                  <button \r\n                    onClick={() => handleDelete(item.item_id)}\r\n                    className=\"delete-button\"\r\n                  >\r\n                    삭제\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              {isLoggedIn && item.item_stock > 0 && (\r\n                <div className=\"cart-controls\">\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max={item.item_stock}\r\n                    value={quantities[item.item_id] || 1}\r\n                    onChange={(e) => handleQuantityChange(item.item_id, parseInt(e.target.value))}\r\n                    className=\"quantity-input\"\r\n                  />\r\n                  <button \r\n                    onClick={() => handleAddToCart(item.item_id, quantities[item.item_id] || 1)}\r\n                    className=\"add-to-cart-button\"\r\n                  >\r\n                    장바구니에 추가\r\n                  </button>\r\n                </div>\r\n                 \r\n              )}\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n        ))}\r\n      </div>\r\n      {/* 페이지네이션 UI */}\r\n      <div className=\"pagination\">\r\n        {/* 이전 페이지 버튼 - 현재 페이지가 1이면 비활성화 */}\r\n        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\r\n          이전\r\n        </button>\r\n        {/* 페이지 번호 버튼들 - 전체 페이지 수만큼 생성 */}\r\n        {Array.from({ length: totalPage }, (_, index) => (\r\n          <button\r\n            key={index + 1}\r\n            onClick={() => handlePageChange(index + 1)}\r\n            className={currentPage === index + 1 ? 'active' : ''} // 현재 페이지 강조\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n        {/* 다음 페이지 버튼 - 현재 페이지가 마지막 페이지면 비활성화 */}\r\n        <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPage}>\r\n          다음\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC,UAAU;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC9C;EACA,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA,MAAM,CAAC0B,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC9B;EACA,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM6B,QAAQ,GAAG3B,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE3B;EACAD,SAAS,CAAC,MAAM;IACd6B,SAAS,CAACN,WAAW,CAAC;EACxB,CAAC,EAAE,CAACN,UAAU,EAAEM,WAAW,CAAC,CAAC;;EAE7B;EACAvB,SAAS,CAAC,MAAM;IAAA,IAAA8B,eAAA;IACd,KAAAA,eAAA,GAAIlB,QAAQ,CAACmB,KAAK,cAAAD,eAAA,eAAdA,eAAA,CAAgBE,OAAO,EAAE;MAC3BH,SAAS,CAACN,WAAW,CAAC;IACxB;EACF,CAAC,EAAE,CAACX,QAAQ,EAAEW,WAAW,CAAC,CAAC;EAE3B,MAAMM,SAAS,GAAG,MAAOI,IAAI,IAAK;IAChC,IAAI;MACFb,UAAU,CAAC,IAAI,CAAC;MAChB;MACA,MAAMc,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAC,kBAAkB,EAAE;QACnDC,MAAM,EAAE;UACNb,WAAW,EAAEU,IAAI;UACjBR;QACF,CAAC;QACDY,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;;MAEF;MACA,MAAM;QAACzB,KAAK,EAAE0B,cAAc;QAAEb;MAAS,CAAC,GAAGQ,QAAQ,CAACM,IAAI;MACxDC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,cAAc,CAAC;;MAE/C;MACA,KAAK,MAAMI,IAAI,IAAIJ,cAAc,EAAE;QACjC,IAAII,IAAI,CAACC,UAAU,KAAK,CAAC,IAAI,CAACD,IAAI,CAACE,WAAW,EAAE;UAC9C,IAAI;YACF;YACA,MAAMC,YAAY,GAAG,MAAM5C,KAAK,CAACiC,GAAG,CAAC,iBAAiB,EAAE;cACtDE,eAAe,EAAE,IAAI;cACrBC,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE;cACZ;YACF,CAAC,CAAC;YAEF,IAAIQ,YAAY,CAACN,IAAI,IAAIO,KAAK,CAACC,OAAO,CAACF,YAAY,CAACN,IAAI,CAAC,EAAE;cACzD,MAAMS,QAAQ,GAAGH,YAAY,CAACN,IAAI,CAACU,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,MAAM,KAAKT,IAAI,CAACU,OAAO,CAAC;cAErF,IAAI,CAACJ,QAAQ,EAAE;gBACb,MAAMb,MAAM,GAAG,IAAIkB,eAAe,CAAC,CAAC;gBACpClB,MAAM,CAACmB,MAAM,CAAC,SAAS,EAAEZ,IAAI,CAACU,OAAO,CAAC;gBAEtC,MAAMnD,KAAK,CAACsD,IAAI,CAAC,oBAAoB,EAAEpB,MAAM,EAAE;kBAC7CC,eAAe,EAAE,IAAI;kBACrBC,OAAO,EAAE;oBACP,cAAc,EAAE;kBAClB;gBACF,CAAC,CAAC;cACJ;YACF;UACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;YACdhB,OAAO,CAACgB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;UACtC;QACF;MACF;;MAEA;MACA,MAAMC,WAAW,GAAGX,KAAK,CAACY,IAAI,CAAC,IAAIC,GAAG,CACpCrB,cAAc,CAACsB,GAAG,CAAClB,IAAI,IAAI,CAACA,IAAI,CAACU,OAAO,EAAEV,IAAI,CAAC,CACjD,CAAC,CAACmB,MAAM,CAAC,CAAC,CAAC;;MAEX;MACA,MAAMC,WAAW,GAAGL,WAAW,CAACM,MAAM,CAACrB,IAAI,IAAI;QAC7C;QACA,OAAO,CAACA,IAAI,CAACE,WAAW,IAAIF,IAAI,CAACC,UAAU,GAAG,CAAC;MACjD,CAAC,CAAC;;MAEF;MACA9B,QAAQ,CAACiD,WAAW,CAAC;MACrBpC,YAAY,CAACD,SAAS,CAAC;MAEvB,MAAMuC,iBAAiB,GAAG,CAAC,CAAC;MAC5BF,WAAW,CAACG,OAAO,CAACvB,IAAI,IAAI;QAC1BsB,iBAAiB,CAACtB,IAAI,CAACU,OAAO,CAAC,GAAG,CAAC;MACrC,CAAC,CAAC;MACFrC,aAAa,CAACiD,iBAAiB,CAAC;IAClC,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdhB,OAAO,CAACgB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC,CAAC,SAAS;MACRrC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAM+C,gBAAgB,GAAIlC,IAAI,IAAK;IACjC;IACA,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGP,SAAS,EAAE;IAClC;IACAF,cAAc,CAACS,IAAI,CAAC;IACpB;IACAJ,SAAS,CAACI,IAAI,CAAC;EACjB,CAAC;EAED,MAAMmC,WAAW,GAAGA,CAAA,KAAM;IACxBlD,aAAa,CAACmD,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;EACvC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOjB,OAAO,IAAK;IACtC,IAAI;MACF,IAAI,CAAC5C,OAAO,EAAE;QACZ8D,KAAK,CAAC,gBAAgB,CAAC;QACvB;MACF;MACA,IAAG,CAAClB,OAAO,EAAC;QACVkB,KAAK,CAAC,eAAe,CAAC;QACtB;MACF;MAEA,IAAIC,MAAM,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAE;QACrC,MAAMrC,MAAM,GAAG,IAAIkB,eAAe,CAAC,CAAC;QACpClB,MAAM,CAACmB,MAAM,CAAC,SAAS,EAAEF,OAAO,CAAC;QAEjC,MAAMnB,QAAQ,GAAG,MAAMhC,KAAK,CAACsD,IAAI,CAC/B,oBAAoB,EACpBpB,MAAM,EACN;UACEC,eAAe,EAAE,IAAI;UACrBC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QAED,IAAIJ,QAAQ,CAACM,IAAI,KAAK,2BAA2B,IAC7CN,QAAQ,CAACwC,MAAM,KAAK,GAAG,IACvBxC,QAAQ,CAACM,IAAI,CAACmC,OAAO,EAAE;UACzBJ,KAAK,CAAC,cAAc,CAAC;UACrB1C,SAAS,CAAC,CAAC;QACb,CAAC,MAAM;UACL0C,KAAK,CAACrC,QAAQ,CAACM,IAAI,CAACoC,OAAO,IAAI,aAAa,CAAC;QAC/C;MACF;IACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdc,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,MAAMM,oBAAoB,GAAGA,CAACzB,MAAM,EAAE0B,KAAK,KAAK;IAC9C,MAAMnC,IAAI,GAAG9B,KAAK,CAACkE,IAAI,CAACpC,IAAI,IAAIA,IAAI,CAACU,OAAO,KAAKD,MAAM,CAAC;IACxD,IAAI,CAACT,IAAI,EAAE;IAEX,MAAMqC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAACL,KAAK,EAAEnC,IAAI,CAACC,UAAU,CAAC,CAAC;IACjE5B,aAAa,CAACoE,IAAI,KAAK;MACrB,GAAGA,IAAI;MACP,CAAChC,MAAM,GAAG4B;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMK,eAAe,GAAG,MAAAA,CAAOjC,MAAM,EAAEkC,QAAQ,KAAK;IAClD,IAAI;MACF,IAAI,CAAC9E,UAAU,EAAE;QACf+D,KAAK,CAAC,aAAa,CAAC;QACpB;MACF;;MAEA;MACA,MAAM5B,IAAI,GAAG9B,KAAK,CAACkE,IAAI,CAACpC,IAAI,IAAIA,IAAI,CAACU,OAAO,KAAKD,MAAM,CAAC;MACxD,IAAI,CAACT,IAAI,IAAIA,IAAI,CAACC,UAAU,IAAI,CAAC,EAAE;QACjC2B,KAAK,CAAC,YAAY,CAAC;QACnB;MACF;MAEA,MAAMnC,MAAM,GAAG,IAAIkB,eAAe,CAAC,CAAC;MACpClB,MAAM,CAACmB,MAAM,CAAC,QAAQ,EAAEH,MAAM,CAAC;MAC/BhB,MAAM,CAACmB,MAAM,CAAC,UAAU,EAAE+B,QAAQ,CAAC;MAEnC,MAAMpD,QAAQ,GAAG,MAAMhC,KAAK,CAACsD,IAAI,CAC/B,qBAAqB,EACrBpB,MAAM,EACN;QACEC,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAIJ,QAAQ,CAACM,IAAI,CAACkC,MAAM,KAAK,SAAS,EAAE;QACtCH,KAAK,CAACrC,QAAQ,CAACM,IAAI,CAACoC,OAAO,CAAC;QAC5B;QACA/C,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACL,MAAM,IAAI0D,KAAK,CAACrD,QAAQ,CAACM,IAAI,CAACoC,OAAO,CAAC;MACxC;IACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;MAAA,IAAA+B,eAAA,EAAAC,oBAAA;MACdhD,OAAO,CAACgB,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCc,KAAK,CAAC,EAAAiB,eAAA,GAAA/B,KAAK,CAACvB,QAAQ,cAAAsD,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBhD,IAAI,cAAAiD,oBAAA,uBAApBA,oBAAA,CAAsBb,OAAO,KAAI,kBAAkB,CAAC;IAC5D;EACF,CAAC;EAED,MAAMc,eAAe,GAAGA,CAACtC,MAAM,EAAEuC,CAAC,KAAK;IACrC,IAAI,CAAC/D,QAAQ,CAACgE,OAAO,CAACxC,MAAM,CAAC,EAAE;IAE/B,MAAMyC,IAAI,GAAGjE,QAAQ,CAACgE,OAAO,CAACxC,MAAM,CAAC;IACrC,MAAM0C,IAAI,GAAGD,IAAI,CAACE,qBAAqB,CAAC,CAAC;IACzC,MAAMC,CAAC,GAAGL,CAAC,CAACM,OAAO,GAAGH,IAAI,CAACI,IAAI;IAC/B,MAAMC,CAAC,GAAGR,CAAC,CAACS,OAAO,GAAGN,IAAI,CAACO,GAAG;IAE9B,MAAMC,OAAO,GAAGR,IAAI,CAACS,KAAK,GAAG,CAAC;IAC9B,MAAMC,OAAO,GAAGV,IAAI,CAACW,MAAM,GAAG,CAAC;IAE/B,MAAMC,OAAO,GAAG,EAAE,CAACP,CAAC,GAAGK,OAAO,IAAI,EAAE,CAAC,GAAG,GAAG;IAC3C,MAAMG,OAAO,GAAI,CAACX,CAAC,GAAGM,OAAO,IAAI,EAAE,GAAI,GAAG;IAE1ChF,YAAY,CAAC8D,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAAChC,MAAM,GAAG;QAAE4C,CAAC,EAAEU,OAAO;QAAEP,CAAC,EAAEQ;MAAQ;IACrC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMC,gBAAgB,GAAIxD,MAAM,IAAK;IACnC9B,YAAY,CAAC8D,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAAChC,MAAM,GAAG;QAAE4C,CAAC,EAAE,CAAC;QAAEG,CAAC,EAAE;MAAE;IACzB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,IAAIhF,OAAO,EAAE;IACX,oBACEb,OAAA;MAAKuG,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxBxG,OAAA;QAAKuG,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BxG,OAAA;UAAAwG,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACE5G,OAAA;IAAKuG,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBxG,OAAA;MAAKuG,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAC7BjG,KAAK,CAACgD,GAAG,CAAClB,IAAI;QAAA,IAAAwE,qBAAA,EAAAC,sBAAA;QAAA,oBACb9G,OAAA;UAEE+G,GAAG,EAAEC,EAAE,IAAI1F,QAAQ,CAACgE,OAAO,CAACjD,IAAI,CAACU,OAAO,CAAC,GAAGiE,EAAG;UAC/CT,SAAS,EAAC,WAAW;UACrBU,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,eAAegC,IAAI,CAACU,OAAO,EAAE,CAAE;UACvDmE,WAAW,EAAG7B,CAAC,IAAKD,eAAe,CAAC/C,IAAI,CAACU,OAAO,EAAEsC,CAAC,CAAE;UACrD8B,YAAY,EAAEA,CAAA,KAAMb,gBAAgB,CAACjE,IAAI,CAACU,OAAO,CAAE;UACnDqE,KAAK,EAAE;YACLC,MAAM,EAAE,SAAS;YACjBC,SAAS,EAAE;AACzB;AACA,0BAA0B,EAAAT,qBAAA,GAAA9F,SAAS,CAACsB,IAAI,CAACU,OAAO,CAAC,cAAA8D,qBAAA,uBAAvBA,qBAAA,CAAyBnB,CAAC,KAAI,CAAC;AACzD,0BAA0B,EAAAoB,sBAAA,GAAA/F,SAAS,CAACsB,IAAI,CAACU,OAAO,CAAC,cAAA+D,sBAAA,uBAAvBA,sBAAA,CAAyBjB,CAAC,KAAI,CAAC;AACzD;AACA,eAAe;YACD0B,UAAU,EAAE;UACd,CAAE;UAAAf,QAAA,gBAEFxG,OAAA;YAAKuG,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBxG,OAAA;cACEwH,GAAG,EAAEnF,IAAI,CAACoF,SAAS,IAAI,qCAAsC;cAC7DC,GAAG,EAAErF,IAAI,CAACsF,SAAU;cACpBC,OAAO,EAAGvC,CAAC,IAAK;gBACdlD,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,IAAI,CAACoF,SAAS,CAAC,CAAC,CAAC;gBAC3CpC,CAAC,CAACwC,MAAM,CAACL,GAAG,GAAG,qCAAqC;cACtD;YAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN5G,OAAA;YAAKuG,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BxG,OAAA;cAAAwG,QAAA,EAAKnE,IAAI,CAACsF;YAAS;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzB5G,OAAA;cAAAwG,QAAA,GAAG,gBAAI,EAACnE,IAAI,CAACyF,UAAU,CAACC,cAAc,CAAC,CAAC,EAAC,QAAC;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9C5G,OAAA;cAAAwG,QAAA,GAAG,gBAAI,EAACnE,IAAI,CAACC,UAAU,CAACyF,cAAc,CAAC,CAAC,EAAC,QAAC;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9C5G,OAAA;cAAAwG,QAAA,EAAInE,IAAI,CAAC2F;YAAgB;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAE7BzG,OAAO,iBACNH,OAAA;cAAKuG,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7BxG,OAAA;gBACEiH,OAAO,EAAEA,CAAA,KAAM5G,QAAQ,CAAC,2BAA2BgC,IAAI,CAACU,OAAO,EAAE,CAAE;gBACnEwD,SAAS,EAAC,aAAa;gBAAAC,QAAA,EACxB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT5G,OAAA;gBACEiH,OAAO,EAAEA,CAAA,KAAMjD,YAAY,CAAC3B,IAAI,CAACU,OAAO,CAAE;gBAC1CwD,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAC1B;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CACN,EAEA1G,UAAU,IAAImC,IAAI,CAACC,UAAU,GAAG,CAAC,iBAChCtC,OAAA;cAAKuG,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAC5BxG,OAAA;gBACEiI,IAAI,EAAC,QAAQ;gBACbpD,GAAG,EAAC,GAAG;gBACPD,GAAG,EAAEvC,IAAI,CAACC,UAAW;gBACrBkC,KAAK,EAAE/D,UAAU,CAAC4B,IAAI,CAACU,OAAO,CAAC,IAAI,CAAE;gBACrCmF,QAAQ,EAAG7C,CAAC,IAAKd,oBAAoB,CAAClC,IAAI,CAACU,OAAO,EAAEoF,QAAQ,CAAC9C,CAAC,CAACwC,MAAM,CAACrD,KAAK,CAAC,CAAE;gBAC9E+B,SAAS,EAAC;cAAgB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3B,CAAC,eACF5G,OAAA;gBACEiH,OAAO,EAAEA,CAAA,KAAMlC,eAAe,CAAC1C,IAAI,CAACU,OAAO,EAAEtC,UAAU,CAAC4B,IAAI,CAACU,OAAO,CAAC,IAAI,CAAC,CAAE;gBAC5EwD,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAC/B;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAEN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA,GArEDvE,IAAI,CAACU,OAAO;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuEd,CAAC;MAAA,CAEP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN5G,OAAA;MAAKuG,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAEzBxG,OAAA;QAAQiH,OAAO,EAAEA,CAAA,KAAMpD,gBAAgB,CAAC5C,WAAW,GAAG,CAAC,CAAE;QAACmH,QAAQ,EAAEnH,WAAW,KAAK,CAAE;QAAAuF,QAAA,EAAC;MAEvF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERnE,KAAK,CAACY,IAAI,CAAC;QAAEgF,MAAM,EAAEjH;MAAU,CAAC,EAAE,CAACkH,CAAC,EAAEC,KAAK,kBAC1CvI,OAAA;QAEEiH,OAAO,EAAEA,CAAA,KAAMpD,gBAAgB,CAAC0E,KAAK,GAAG,CAAC,CAAE;QAC3ChC,SAAS,EAAEtF,WAAW,KAAKsH,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG,EAAG,CAAC;QAAA;QAAA/B,QAAA,EAErD+B,KAAK,GAAG;MAAC,GAJLA,KAAK,GAAG,CAAC;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACT,CAAC,eAEF5G,OAAA;QAAQiH,OAAO,EAAEA,CAAA,KAAMpD,gBAAgB,CAAC5C,WAAW,GAAG,CAAC,CAAE;QAACmH,QAAQ,EAAEnH,WAAW,KAAKG,SAAU;QAAAoF,QAAA,EAAC;MAE/F;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxG,EAAA,CApWQH,QAAQ;EAAA,QACEJ,WAAW,EACXC,WAAW;AAAA;AAAA0I,EAAA,GAFrBvI,QAAQ;AAsWjB,eAAeA,QAAQ;AAAC,IAAAuI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}