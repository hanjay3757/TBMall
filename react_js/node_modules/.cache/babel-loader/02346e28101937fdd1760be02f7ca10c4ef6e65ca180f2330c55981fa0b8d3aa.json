{"ast":null,"code":"var _jsxFileName = \"C:\\\\JWH\\\\vsc\\\\study\\\\team\\\\src\\\\components\\\\ItemDetail.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport './ItemDetail.css';\nimport { SERVER_URL } from '../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ItemDetail() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    itemId\n  } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [item, setItem] = useState(null);\n  const [boards, setBoards] = useState([]);\n  const [newBoard, setNewBoard] = useState({\n    board_title: '',\n    board_content: ''\n  });\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [currentComment, setCurrentComment] = useState(1);\n  const [cpageSize, setCpageSize] = useState(5);\n  const [totalComment, setTotalComment] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const [totalPages, setTotalPages] = useState(0);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [memberNo, setMemberNo] = useState(null); // 멤버 번호 상태 추가\n\n  // 댓글 목록 로드 함수 정의\n  const loadComments = async itemId => {\n    try {\n      const response = await axios.get(`${SERVER_URL}/mvc/board/commentlist`, {\n        params: {\n          item_id: itemId,\n          currentComment: currentComment,\n          cpageSize: cpageSize\n        },\n        withCredentials: true\n      });\n      if (response.data && Array.isArray(response.data.comments)) {\n        setComments(response.data.comments);\n        setTotalComment(response.data.totalComment || 0);\n        setCurrentComment(response.data.currentComment || 1);\n      } else {\n        setComments([]);\n        setTotalComment(0);\n      }\n    } catch (error) {\n      setComments([]);\n      setTotalComment(0);\n    }\n  };\n\n  // checkLoginStatus 함수 수정\n  const checkLoginStatus = async () => {\n    try {\n      const response = await axios.post(`${SERVER_URL}/mvc/staff/check-login`, {}, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data && response.data.isLoggedIn) {\n        setIsLoggedIn(true);\n        setIsAdmin(response.data.isAdmin);\n        setMemberNo(response.data.admin_no); // 멤버 번호 저장\n        localStorage.setItem('member_no', response.data.admin_no);\n        localStorage.setItem('member_role', response.data.isAdmin ? 'ROLE_ADMIN' : 'ROLE_USER');\n        setUserInfo(response.data);\n      } else {\n        setIsLoggedIn(false);\n        setIsAdmin(false);\n        setMemberNo(null);\n        localStorage.removeItem('member_no');\n        localStorage.removeItem('member_role');\n        setUserInfo(null);\n      }\n    } catch (error) {\n      setIsLoggedIn(false);\n      setIsAdmin(false);\n      setMemberNo(null);\n      setUserInfo(null);\n    }\n  };\n\n  // 상품 정보와 댓글 목록 로드\n  useEffect(() => {\n    // 장바구니 관련 리다이렉트 처리\n    const params = new URLSearchParams(location.search);\n    const redirectFrom = params.get('from');\n    if (redirectFrom === 'cart') {\n      return; // 장바구니에서 온 경우 상세 페이지 로드 중단\n    }\n    const loadItemDetail = async () => {\n      try {\n        const response = await axios.get(`${SERVER_URL}/mvc/stuff/item/detail/${itemId}`, {\n          withCredentials: true\n        });\n        if (response.data.status === 'success') {\n          setItem(response.data.item);\n        } else {\n          throw new Error('상품 정보를 불러오는데 실패했습니다.');\n        }\n      } catch (error) {\n        alert('상품 정보를 불러오는데 실패했습니다.');\n        setItem(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // 로그인 상태 체크 및 사용자 정보 로드\n    const storedMemberNo = localStorage.getItem('member_no');\n    if (storedMemberNo) {\n      setIsLoggedIn(true);\n      setMemberNo(storedMemberNo);\n      const memberRole = localStorage.getItem('member_role');\n      setIsAdmin(memberRole === 'ROLE_ADMIN');\n      setUserInfo({\n        member_no: storedMemberNo,\n        member_role: memberRole\n      });\n    }\n    const loadData = async () => {\n      await checkLoginStatus();\n      await loadItemDetail();\n      if (itemId) {\n        await loadComments(itemId);\n      }\n    };\n    loadData();\n\n    // 로그인 상태 변경 감지를 위한 이벤트 리스너\n    window.addEventListener('storage', checkLoginStatus);\n    return () => {\n      window.removeEventListener('storage', checkLoginStatus);\n    };\n  }, [itemId, currentComment, location.search]);\n\n  // 댓글 작성 함수 - 새로운 댓글을 서버에 전송\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!newComment.trim()) {\n      alert('댓글 내용을 입력해 주세요.');\n      return;\n    }\n    try {\n      // 로그인 여부 확인\n      if (!memberNo) {\n        alert('로그인이 필요한 서비스입니다.');\n        navigate('/staff/login');\n        return;\n      }\n\n      // 1. 세션에 상품 정보 저장 및 로그인 상태 확인\n      const sessionResponse = await axios.get(`${SERVER_URL}/mvc/board/comment`, {\n        params: {\n          item_id: Number(itemId),\n          member_no: memberNo // 현재 로그인한 사용자의 member_no를 전달\n        },\n        withCredentials: true\n      });\n\n      // 로그인 세션이 만료된 경우 처리\n      if (sessionResponse.data === 'redirect:/staff/login') {\n        alert('로그인이 필요한 서비스입니다.');\n        navigate('/staff/login');\n        return;\n      }\n\n      // 2. 댓글 데이터 구성 - 작성자 식별을 위해 member_no 포함\n      const commentData = {\n        comment_content: newComment.trim(),\n        member_no: memberNo // 이 member_no로 작성자를 식별\n      };\n\n      // 3. 댓글 등록 요청\n      const response = await axios.post(`${SERVER_URL}/mvc/board/comment`, commentData, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data.success) {\n        setNewComment('');\n        await loadComments(itemId);\n        alert('댓글이 등록되었습니다.');\n      } else {\n        throw new Error(response.data.message || '댓글 등록에 실패했습니다.');\n      }\n    } catch (error) {\n      var _error$response;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        alert('로그인이 필요한 서비스입니다.');\n        navigate('/staff/login');\n      } else {\n        var _error$response2, _error$response2$data;\n        alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\n      }\n    }\n  };\n\n  // 댓글 삭제 함수 수정\n  const handleDelete = async (item_id, member_no) => {\n    try {\n      const memberRole = localStorage.getItem('member_role');\n      if (memberRole !== 'ROLE_ADMIN') {\n        alert('관리자만 댓글을 삭제할 수 있습니다.');\n        return;\n      }\n      const confirmDelete = window.confirm('정말로 이 댓글을 삭제하시겠습니까?');\n      if (!confirmDelete) {\n        return;\n      }\n      const deleteUrl = `${SERVER_URL}/mvc/board/comment/${item_id}/${member_no}`;\n      const response = await axios.delete(deleteUrl, {\n        withCredentials: true\n      });\n      if (response.data.success) {\n        alert('댓글이 성공적으로 삭제되었습니다.');\n        await loadComments(itemId);\n      } else {\n        throw new Error(response.data.message || '댓글 삭제에 실패했습니다.');\n      }\n    } catch (error) {\n      alert('댓글 삭제에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  const handleCommentPageChange = page => {\n    if (page >= 1 && page <= totalComment) {\n      setCurrentComment(page);\n    }\n  };\n\n  // 댓글 목록 표시 컴포넌트\n  const renderComments = () => {\n    if (!comments || comments.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-comments\",\n        children: \"\\uB4F1\\uB85D\\uB41C \\uB313\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 14\n      }, this);\n    }\n\n    // 관리자 권한 확인\n    const isAdminUser = (userInfo === null || userInfo === void 0 ? void 0 : userInfo.isAdmin) || (userInfo === null || userInfo === void 0 ? void 0 : userInfo.delete_right_no) === 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-containers\",\n      children: [comments.map((comment, index) => {\n        // 각 댓글을 고유하게 식별하기 위한 키 생성\n        const uniqueKey = `${comment.item_id}-${comment.member_no}-${index}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-items\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-headers\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-authors\",\n              children: comment.member_nick ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: comment.member_nick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 23\n                }, this), comment.member_role === 'ADMIN' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"admin-badge\",\n                  children: \"\\uAD00\\uB9AC\\uC790\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true) : '익명'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"comment-dates\",\n              children: new Date(comment.comment_writedate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment-contents\",\n            children: comment.comment_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), isAdminUser && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              // item_id와 member_no로 특정 댓글 식별하여 삭제\n              handleDelete(comment.item_id, comment.member_no);\n            },\n            className: \"delete-btns\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this)]\n        }, uniqueKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentPageChange(currentComment - 1),\n          disabled: currentComment <= 1,\n          children: \"\\uC774\\uC804\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [currentComment, \" / \", totalComment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCommentPageChange(currentComment + 1),\n          disabled: currentComment >= totalComment,\n          children: \"\\uB2E4\\uC74C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this);\n  };\n\n  // CommentForm 컴포넌트 수정\n  const CommentForm = () => {\n    _s();\n    const [localComment, setLocalComment] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const handleSubmit = async e => {\n      e.preventDefault();\n      if (isSubmitting) return;\n      if (!localComment.trim()) {\n        alert('댓글 내용을 입력해 주세요.');\n        return;\n      }\n      try {\n        setIsSubmitting(true);\n        if (!memberNo) {\n          alert('로그인이 필요한 서비스입니다.');\n          navigate('/staff/login');\n          return;\n        }\n        const sessionResponse = await axios.get(`${SERVER_URL}/mvc/board/comment`, {\n          params: {\n            item_id: Number(itemId),\n            member_no: memberNo\n          },\n          withCredentials: true\n        });\n        if (sessionResponse.data === 'redirect:/staff/login') {\n          alert('로그인이 필요한 서비스입니다.');\n          navigate('/staff/login');\n          return;\n        }\n        const commentData = {\n          comment_content: localComment.trim(),\n          member_no: memberNo\n        };\n        const response = await axios.post(`${SERVER_URL}/mvc/board/comment`, commentData, {\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.data.success) {\n          setLocalComment('');\n          await loadComments(itemId);\n          alert('댓글이 등록되었습니다.');\n        } else {\n          throw new Error(response.data.message);\n        }\n      } catch (error) {\n        var _error$response3;\n        if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n          alert('로그인이 필요한 서비스입니다.');\n          navigate('/staff/login');\n        } else {\n          var _error$response4, _error$response4$data;\n          alert(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\n        }\n      } finally {\n        setIsSubmitting(false);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"comment-forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: localComment,\n        onChange: e => setLocalComment(e.target.value),\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n        required: true,\n        disabled: isSubmitting,\n        rows: 4,\n        className: \"comment-textareas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submits\",\n        disabled: isSubmitting,\n        children: isSubmitting ? '등록 중...' : '댓글 작성'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this);\n  };\n\n  // 수정 버튼 핸들러 추가\n  _s(CommentForm, \"9OEAhiTqDaG4LfOXPHQhv9nOJIM=\");\n  const handleEdit = async item_id => {\n    try {\n      if (!isAdmin) {\n        alert('관리자만 수정할 수 있습니다.');\n        return;\n      }\n      navigate(`/stuff/item/edit?itemId=${item_id}`);\n    } catch (error) {\n      alert('상품 수정 페이지로 이동할 수 없습니다.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 12\n    }, this);\n  }\n  if (!item) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC0C1\\uD488\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-detail-containers\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-imagess\",\n        children: item !== null && item !== void 0 && item.image_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.image_url,\n          alt: item.item_name,\n          onError: e => {\n            e.target.src = 'https://via.placeholder.com/400x200';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://via.placeholder.com/400x200\",\n          alt: \"\\uAE30\\uBCF8 \\uC774\\uBBF8\\uC9C0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-infos\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item === null || item === void 0 ? void 0 : item.item_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"prices\",\n          children: [\"\\uAC00\\uACA9: \", ((item === null || item === void 0 ? void 0 : item.item_price) || 0).toLocaleString(), \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stocks\",\n          children: [\"\\uC7AC\\uACE0: \", ((item === null || item === void 0 ? void 0 : item.item_stock) || 0).toLocaleString(), \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"descriptions\",\n          children: item === null || item === void 0 ? void 0 : item.item_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(item === null || item === void 0 ? void 0 : item.item_id),\n          className: \"edit-buttonss\",\n          style: {\n            padding: '15px 15px',\n            fontSize: '0.8rem',\n            marginBottom: '10px'\n          },\n          children: \"\\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(CommentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-requireds\",\n        children: \"\\uB313\\uAE00\\uC744 \\uC791\\uC131\\uD558\\uB824\\uBA74 \\uB85C\\uADF8\\uC778\\uC774 \\uD544\\uC694\\uD569\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), renderComments()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n_s2(ItemDetail, \"ymKjwYOLltgEDGc90KIl8Q7uQVg=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n_c = ItemDetail;\nexport default ItemDetail;\nvar _c;\n$RefreshReg$(_c, \"ItemDetail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","useLocation","SERVER_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemDetail","_s2","_s","$RefreshSig$","itemId","navigate","location","item","setItem","boards","setBoards","newBoard","setNewBoard","board_title","board_content","comments","setComments","newComment","setNewComment","currentComment","setCurrentComment","cpageSize","setCpageSize","totalComment","setTotalComment","loading","setLoading","currentPage","setCurrentPage","pageSize","setPageSize","totalPages","setTotalPages","userInfo","setUserInfo","isLoggedIn","setIsLoggedIn","isAdmin","setIsAdmin","memberNo","setMemberNo","loadComments","response","get","params","item_id","withCredentials","data","Array","isArray","error","checkLoginStatus","post","headers","admin_no","localStorage","removeItem","URLSearchParams","search","redirectFrom","loadItemDetail","status","Error","alert","storedMemberNo","getItem","memberRole","member_no","member_role","loadData","window","addEventListener","removeEventListener","handleCommentSubmit","e","preventDefault","trim","sessionResponse","Number","commentData","comment_content","success","message","_error$response","_error$response2","_error$response2$data","handleDelete","confirmDelete","confirm","deleteUrl","delete","handleCommentPageChange","page","renderComments","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isAdminUser","delete_right_no","map","comment","index","uniqueKey","member_nick","Date","comment_writedate","toLocaleDateString","onClick","disabled","CommentForm","localComment","setLocalComment","isSubmitting","setIsSubmitting","handleSubmit","_error$response3","_error$response4","_error$response4$data","onSubmit","value","onChange","target","placeholder","required","rows","type","handleEdit","image_url","src","alt","item_name","onError","item_price","toLocaleString","item_stock","item_description","style","display","justifyContent","alignItems","padding","fontSize","marginBottom","_c","$RefreshReg$"],"sources":["C:/JWH/vsc/study/team/src/components/ItemDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport './ItemDetail.css';\r\nimport { SERVER_URL } from '../config';\r\n\r\nfunction ItemDetail() {\r\n  const { itemId } = useParams();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [item, setItem] = useState(null);\r\n  const [boards, setBoards] = useState([]);\r\n  const [newBoard, setNewBoard] = useState({\r\n    board_title: '',\r\n    board_content: ''\r\n  });\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [currentComment, setCurrentComment] = useState(1);\r\n  const [cpageSize, setCpageSize] = useState(5);\r\n  const [totalComment, setTotalComment] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [memberNo, setMemberNo] = useState(null); // 멤버 번호 상태 추가\r\n\r\n  // 댓글 목록 로드 함수 정의\r\n  const loadComments = async (itemId) => {\r\n    try {\r\n      const response = await axios.get(`${SERVER_URL}/mvc/board/commentlist`, {\r\n        params: { \r\n          item_id: itemId,\r\n          currentComment: currentComment, \r\n          cpageSize: cpageSize \r\n        },\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.data && Array.isArray(response.data.comments)) {\r\n        setComments(response.data.comments);\r\n        setTotalComment(response.data.totalComment || 0);\r\n        setCurrentComment(response.data.currentComment || 1);\r\n      } else {\r\n        setComments([]);\r\n        setTotalComment(0);\r\n      }\r\n    } catch (error) {\r\n      setComments([]);\r\n      setTotalComment(0);\r\n    }\r\n  };\r\n\r\n  // checkLoginStatus 함수 수정\r\n  const checkLoginStatus = async () => {\r\n    try {\r\n      const response = await axios.post(`${SERVER_URL}/mvc/staff/check-login`, {}, {\r\n        withCredentials: true,\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.data && response.data.isLoggedIn) {\r\n        setIsLoggedIn(true);\r\n        setIsAdmin(response.data.isAdmin);\r\n        setMemberNo(response.data.admin_no); // 멤버 번호 저장\r\n        localStorage.setItem('member_no', response.data.admin_no);\r\n        localStorage.setItem('member_role', response.data.isAdmin ? 'ROLE_ADMIN' : 'ROLE_USER');\r\n        setUserInfo(response.data);\r\n      } else {\r\n        setIsLoggedIn(false);\r\n        setIsAdmin(false);\r\n        setMemberNo(null);\r\n        localStorage.removeItem('member_no');\r\n        localStorage.removeItem('member_role');\r\n        setUserInfo(null);\r\n      }\r\n    } catch (error) {\r\n      setIsLoggedIn(false);\r\n      setIsAdmin(false);\r\n      setMemberNo(null);\r\n      setUserInfo(null);\r\n    }\r\n  };\r\n\r\n  // 상품 정보와 댓글 목록 로드\r\n  useEffect(() => {\r\n    // 장바구니 관련 리다이렉트 처리\r\n    const params = new URLSearchParams(location.search);\r\n    const redirectFrom = params.get('from');\r\n    if (redirectFrom === 'cart') {\r\n      return; // 장바구니에서 온 경우 상세 페이지 로드 중단\r\n    }\r\n\r\n    const loadItemDetail = async () => {\r\n      try {\r\n        const response = await axios.get(`${SERVER_URL}/mvc/stuff/item/detail/${itemId}`, {\r\n          withCredentials: true\r\n        });\r\n        \r\n        if (response.data.status === 'success') {\r\n          setItem(response.data.item);\r\n        } else {\r\n          throw new Error('상품 정보를 불러오는데 실패했습니다.');\r\n        }\r\n      } catch (error) {\r\n        alert('상품 정보를 불러오는데 실패했습니다.');\r\n        setItem(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // 로그인 상태 체크 및 사용자 정보 로드\r\n    const storedMemberNo = localStorage.getItem('member_no');\r\n    if (storedMemberNo) {\r\n      setIsLoggedIn(true);\r\n      setMemberNo(storedMemberNo);\r\n      const memberRole = localStorage.getItem('member_role');\r\n      setIsAdmin(memberRole === 'ROLE_ADMIN');\r\n      setUserInfo({\r\n        member_no: storedMemberNo,\r\n        member_role: memberRole\r\n      });\r\n    }\r\n\r\n    const loadData = async () => {\r\n      await checkLoginStatus();\r\n      await loadItemDetail();\r\n      if (itemId) {\r\n        await loadComments(itemId);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n\r\n    // 로그인 상태 변경 감지를 위한 이벤트 리스너\r\n    window.addEventListener('storage', checkLoginStatus);\r\n    \r\n    return () => {\r\n      window.removeEventListener('storage', checkLoginStatus);\r\n    };\r\n  }, [itemId, currentComment, location.search]);\r\n\r\n  // 댓글 작성 함수 - 새로운 댓글을 서버에 전송\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newComment.trim()) {\r\n      alert('댓글 내용을 입력해 주세요.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 로그인 여부 확인\r\n      if (!memberNo) {\r\n        alert('로그인이 필요한 서비스입니다.');\r\n        navigate('/staff/login');\r\n        return;\r\n      }\r\n\r\n      // 1. 세션에 상품 정보 저장 및 로그인 상태 확인\r\n      const sessionResponse = await axios.get(\r\n        `${SERVER_URL}/mvc/board/comment`,\r\n        {\r\n          params: { \r\n            item_id: Number(itemId),\r\n            member_no: memberNo  // 현재 로그인한 사용자의 member_no를 전달\r\n          },\r\n          withCredentials: true\r\n        }\r\n      );\r\n\r\n      // 로그인 세션이 만료된 경우 처리\r\n      if (sessionResponse.data === 'redirect:/staff/login') {\r\n        alert('로그인이 필요한 서비스입니다.');\r\n        navigate('/staff/login');\r\n        return;\r\n      }\r\n\r\n      // 2. 댓글 데이터 구성 - 작성자 식별을 위해 member_no 포함\r\n      const commentData = {\r\n        comment_content: newComment.trim(),\r\n        member_no: memberNo  // 이 member_no로 작성자를 식별\r\n      };\r\n\r\n      // 3. 댓글 등록 요청\r\n      const response = await axios.post(\r\n        `${SERVER_URL}/mvc/board/comment`,\r\n        commentData,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setNewComment('');\r\n        await loadComments(itemId);\r\n        alert('댓글이 등록되었습니다.');\r\n      } else {\r\n        throw new Error(response.data.message || '댓글 등록에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      if (error.response?.status === 401) {\r\n        alert('로그인이 필요한 서비스입니다.');\r\n        navigate('/staff/login');\r\n      } else {\r\n        alert(error.response?.data?.message || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // 댓글 삭제 함수 수정\r\n  const handleDelete = async (item_id, member_no) => {\r\n    try {\r\n      const memberRole = localStorage.getItem('member_role');\r\n      if (memberRole !== 'ROLE_ADMIN') {\r\n        alert('관리자만 댓글을 삭제할 수 있습니다.');\r\n        return;\r\n      }\r\n\r\n      const confirmDelete = window.confirm('정말로 이 댓글을 삭제하시겠습니까?');\r\n      if (!confirmDelete) {\r\n        return;\r\n      }\r\n\r\n      const deleteUrl = `${SERVER_URL}/mvc/board/comment/${item_id}/${member_no}`;\r\n      const response = await axios.delete(deleteUrl, {\r\n        withCredentials: true\r\n      });\r\n\r\n      if (response.data.success) {\r\n        alert('댓글이 성공적으로 삭제되었습니다.');\r\n        await loadComments(itemId);\r\n      } else {\r\n        throw new Error(response.data.message || '댓글 삭제에 실패했습니다.');\r\n      }\r\n    } catch (error) {\r\n      alert('댓글 삭제에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleCommentPageChange = (page) => {\r\n    if (page >= 1 && page <= totalComment) {\r\n      setCurrentComment(page);\r\n    }\r\n  };\r\n\r\n  // 댓글 목록 표시 컴포넌트\r\n  const renderComments = () => {\r\n    if (!comments || comments.length === 0) {\r\n      return <p className=\"no-comments\">등록된 댓글이 없습니다.</p>;\r\n    }\r\n\r\n    // 관리자 권한 확인\r\n    const isAdminUser = userInfo?.isAdmin || userInfo?.delete_right_no === 1;\r\n\r\n    return (\r\n      <div className=\"comments-containers\">\r\n        {comments.map((comment, index) => {\r\n          // 각 댓글을 고유하게 식별하기 위한 키 생성\r\n          const uniqueKey = `${comment.item_id}-${comment.member_no}-${index}`;\r\n\r\n          return (\r\n            <div key={uniqueKey} className=\"comment-items\">\r\n              <div className=\"comment-headers\">\r\n                <span className=\"comment-authors\">\r\n                  {comment.member_nick ? (\r\n                    <>\r\n                      <strong>{comment.member_nick}</strong>\r\n                      {comment.member_role === 'ADMIN' && (\r\n                        <span className=\"admin-badge\">관리자</span>\r\n                      )}\r\n                    </>\r\n                  ) : (\r\n                    '익명'\r\n                  )}\r\n                </span>\r\n                <span className=\"comment-dates\">\r\n                  {new Date(comment.comment_writedate).toLocaleDateString()}\r\n                </span>\r\n              </div>\r\n              <p className=\"comment-contents\">{comment.comment_content}</p>\r\n              {/* 관리자만 삭제 버튼 표시 */}\r\n              {isAdminUser && (\r\n                <button\r\n                  onClick={() => {\r\n                    // item_id와 member_no로 특정 댓글 식별하여 삭제\r\n                    handleDelete(comment.item_id, comment.member_no);\r\n                  }}\r\n                  className=\"delete-btns\"\r\n                >\r\n                  삭제\r\n                </button>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n        \r\n        {/* 페이지네이션 컨트롤 */}\r\n        <div className=\"pagination\">\r\n          <button\r\n            onClick={() => handleCommentPageChange(currentComment - 1)}\r\n            disabled={currentComment <= 1}\r\n          >\r\n            이전\r\n          </button>\r\n          <span>{currentComment} / {totalComment}</span>\r\n          <button\r\n            onClick={() => handleCommentPageChange(currentComment + 1)}\r\n            disabled={currentComment >= totalComment}\r\n          >\r\n            다음\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // CommentForm 컴포넌트 수정\r\n  const CommentForm = () => {\r\n    const [localComment, setLocalComment] = useState('');\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n      e.preventDefault();\r\n      if (isSubmitting) return;\r\n\r\n      if (!localComment.trim()) {\r\n        alert('댓글 내용을 입력해 주세요.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        setIsSubmitting(true);\r\n        if (!memberNo) {\r\n          alert('로그인이 필요한 서비스입니다.');\r\n          navigate('/staff/login');\r\n          return;\r\n        }\r\n\r\n        const sessionResponse = await axios.get(\r\n          `${SERVER_URL}/mvc/board/comment`,\r\n          {\r\n            params: { \r\n              item_id: Number(itemId),\r\n              member_no: memberNo\r\n            },\r\n            withCredentials: true\r\n          }\r\n        );\r\n\r\n        if (sessionResponse.data === 'redirect:/staff/login') {\r\n          alert('로그인이 필요한 서비스입니다.');\r\n          navigate('/staff/login');\r\n          return;\r\n        }\r\n\r\n        const commentData = {\r\n          comment_content: localComment.trim(),\r\n          member_no: memberNo\r\n        };\r\n\r\n        const response = await axios.post(\r\n          `${SERVER_URL}/mvc/board/comment`,\r\n          commentData,\r\n          {\r\n            withCredentials: true,\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          }\r\n        );\r\n\r\n        if (response.data.success) {\r\n          setLocalComment('');\r\n          await loadComments(itemId);\r\n          alert('댓글이 등록되었습니다.');\r\n        } else {\r\n          throw new Error(response.data.message);\r\n        }\r\n      } catch (error) {\r\n        if (error.response?.status === 401) {\r\n          alert('로그인이 필요한 서비스입니다.');\r\n          navigate('/staff/login');\r\n        } else {\r\n          alert(error.response?.data?.message || '댓글 작성에 실패했습니다. 다시 시도해주세요.');\r\n        }\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit} className=\"comment-forms\">\r\n        <textarea\r\n          value={localComment}\r\n          onChange={(e) => setLocalComment(e.target.value)}\r\n          placeholder=\"댓글을 입력하세요...\"\r\n          required\r\n          disabled={isSubmitting}\r\n          rows={4}\r\n          className=\"comment-textareas\"\r\n        />\r\n        <button type=\"submits\" disabled={isSubmitting}>\r\n          {isSubmitting ? '등록 중...' : '댓글 작성'}\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  // 수정 버튼 핸들러 추가\r\n  const handleEdit = async (item_id) => {\r\n    try {\r\n      if (!isAdmin) {\r\n        alert('관리자만 수정할 수 있습니다.');\r\n        return;\r\n      }\r\n\r\n      navigate(`/stuff/item/edit?itemId=${item_id}`);\r\n    } catch (error) {\r\n      alert('상품 수정 페이지로 이동할 수 없습니다.');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>로딩 중...</div>;\r\n  }\r\n\r\n  if (!item) {\r\n    return <div>상품을 찾을 수 없습니다.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"item-detail-containers\">\r\n      <div className=\"item-details\">\r\n        <div className=\"item-imagess\">\r\n          {item?.image_url ? (\r\n            <img \r\n              src={item.image_url}\r\n              alt={item.item_name}\r\n              onError={(e) => {\r\n                e.target.src = 'https://via.placeholder.com/400x200';\r\n              }}\r\n            />\r\n          ) : (\r\n            <img \r\n              src='https://via.placeholder.com/400x200'\r\n              alt=\"기본 이미지\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"item-infos\">\r\n          <h2>{item?.item_name}</h2>\r\n          <p className=\"prices\">가격: {(item?.item_price || 0).toLocaleString()}원</p>\r\n          <p className=\"stocks\">재고: {(item?.item_stock || 0).toLocaleString()}개</p>\r\n          <p className=\"descriptions\">{item?.item_description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"comments-sections\">\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <h3></h3>\r\n          {isAdmin && (\r\n            <button \r\n              onClick={() => handleEdit(item?.item_id)}\r\n              className=\"edit-buttonss\"\r\n              style={{ padding: '15px 15px', fontSize: '0.8rem' , marginBottom: '10px'}}\r\n            >\r\n              수정\r\n            </button>\r\n\r\n          )}\r\n        </div>\r\n        {isLoggedIn ? <CommentForm /> : (\r\n          <p className=\"login-requireds\">\r\n            댓글을 작성하려면 로그인이 필요합니다.\r\n          </p>\r\n        )}\r\n        {renderComments()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}