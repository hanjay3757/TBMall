{"ast":null,"code":"var _jsxFileName = \"C:\\\\JWH\\\\vsc\\\\study\\\\team\\\\src\\\\components\\\\BoardWrite.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoardWrite({\n  isLoggedIn\n}) {\n  _s();\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //     const loginStaff = JSON.parse(localStorage.getItem('loginStaff'));\n  //     if (loginStaff) {\n  //         setBoardData((prevData) => ({ ...prevData, member_no: loginStaff.member_no }));\n  //     }\n  // }, []);\n\n  // 로그인 상태에서 계정 번호를 가져옴\n  const memberNo = (isLoggedIn === null || isLoggedIn === void 0 ? void 0 : isLoggedIn.member_no) || localStorage.getItem('member_no') || '';\n  const [boardData, setBoardData] = useState({\n    member_no: memberNo,\n    board_title: '',\n    board_content: ''\n  });\n  console.log(\"전송할 데이터:\", boardData);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBoardData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log('전송할 데이터:', boardData);\n      const params = new URLSearchParams();\n      Object.keys(boardData).forEach(key => {\n        params.append(key, boardData[key]);\n      });\n      console.log('등록할 데이터:', Object.fromEntries(params));\n      const response = await axios.post('http://192.168.0.141:8080/mvc/board/write', params, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      });\n      if (response.data.success) {\n        alert('글 작성 완료');\n        navigate('/board/list');\n      } else {\n        alert(response.data.message || '글 등록에 실패하였습니다.');\n      }\n    } catch (error) {\n      console.error('글 등록 실패:', error);\n      alert('글 작성에 실패하였습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"board_title\",\n        children: \"\\uAE00 \\uC81C\\uBAA9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"board_title\",\n        name: \"board_title\",\n        value: boardData.board_title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"board_content\",\n        children: \"\\uAE00 \\uB0B4\\uC6A9:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"board_content\",\n        name: \"board_content\",\n        value: boardData.board_content,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\uAE00 \\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(BoardWrite, \"Hz53J34WbDfcRGoGArQcA4gImxY=\", false, function () {\n  return [useNavigate];\n});\n_c = BoardWrite;\nexport default BoardWrite;\nvar _c;\n$RefreshReg$(_c, \"BoardWrite\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","BoardWrite","isLoggedIn","_s","navigate","memberNo","member_no","localStorage","getItem","boardData","setBoardData","board_title","board_content","console","log","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","params","URLSearchParams","Object","keys","forEach","key","append","fromEntries","response","post","headers","data","success","alert","message","error","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","required","_c","$RefreshReg$"],"sources":["C:/JWH/vsc/study/team/src/components/BoardWrite.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction BoardWrite({ isLoggedIn }) {\r\n    const navigate = useNavigate();\r\n    // useEffect(() => {\r\n    //     const loginStaff = JSON.parse(localStorage.getItem('loginStaff'));\r\n    //     if (loginStaff) {\r\n    //         setBoardData((prevData) => ({ ...prevData, member_no: loginStaff.member_no }));\r\n    //     }\r\n    // }, []);\r\n    \r\n\r\n    // 로그인 상태에서 계정 번호를 가져옴\r\n    const memberNo = isLoggedIn?.member_no || localStorage.getItem('member_no') || '';\r\n\r\n    const [boardData, setBoardData] = useState({\r\n        member_no: memberNo,\r\n        board_title: '',\r\n        board_content: ''\r\n       \r\n    });\r\n\r\n    console.log(\"전송할 데이터:\" ,boardData);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setBoardData((prevData) => ({\r\n            ...prevData,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            console.log('전송할 데이터:', boardData);\r\n\r\n            const params = new URLSearchParams();\r\n            Object.keys(boardData).forEach((key) => {\r\n                params.append(key, boardData[key]);\r\n            });\r\n\r\n            console.log('등록할 데이터:', Object.fromEntries(params));\r\n\r\n            const response = await axios.post(\r\n                'http://192.168.0.141:8080/mvc/board/write',\r\n                params,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded'\r\n                    }\r\n                }\r\n              \r\n            );\r\n\r\n            if (response.data.success) {\r\n                alert('글 작성 완료');\r\n                navigate('/board/list');\r\n            } else {\r\n                alert(response.data.message || '글 등록에 실패하였습니다.');\r\n            }\r\n        } catch (error) {\r\n            console.error('글 등록 실패:', error);\r\n            alert('글 작성에 실패하였습니다.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {/* member_no는 고정값으로 렌더링 */}\r\n            \r\n            <div>\r\n                <label htmlFor=\"board_title\">글 제목:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"board_title\"\r\n                    name=\"board_title\"\r\n                    value={boardData.board_title}\r\n                    onChange={handleChange}\r\n                    required\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"board_content\">글 내용:</label>\r\n                <textarea\r\n                    id=\"board_content\"\r\n                    name=\"board_content\"\r\n                    value={boardData.board_content}\r\n                    onChange={handleChange}\r\n                    required\r\n                ></textarea>\r\n            </div>\r\n                \r\n            <button type=\"submit\">글 작성</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default BoardWrite;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}