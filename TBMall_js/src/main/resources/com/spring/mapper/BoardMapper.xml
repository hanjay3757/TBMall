<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.BoardMapper">
	<!-- 게시판 글 목록 가져오기(페이징 아직 안됐음) -->
	<select id="getBoardlist" parameterType="com.spring.dto.PagingDto" resultType="com.spring.dto.BoardDto">
		SELECT * FROM tbmall_board 
		WHERE board_delete =0 
		LIMIT #{limit} OFFSET #{offset}
	</select>  
	<!-- 게시판 글 읽기 -->
	<select id="readContent" resultType="com.spring.dto.BoardDto">
		SELECT * from tbmall_board where board_no= #{board_no}
	</select>
	
	<!-- 게시판 글 쓰기 -->	
	<insert id="writeContent" parameterType="com.spring.dto.BoardDto">
		INSERT INTO tbmall_board (member_no , board_title, board_content, board_writedate)
		VALUES(#{member_no},#{board_title},#{board_content},CURRENT_TIMESTAMP)
	</insert>
	<!-- 글 수정 -->
	<update id="editContent" parameterType="com.spring.dto.BoardDto">
		UPDATE tbmall_board
		SET
			board_title = #{board_title},
			board_content = #{board_content},
			board_writedate = CURRENT_TIMESTAMP
		WHERE board_no = #{board_no} AND member_no = #{member_no}	
	</update>
	
	<!-- 글 삭제하기 -->
	<!-- 글 삭제하기 (단일 글 삭제) -->
	<update id="deleteOneContent" parameterType="long">
		UPDATE tbmall_board 
		SET board_delete = 1,
			board_writedate = CURRENT_TIMESTAMP
		WHERE board_no = #{board_no}
	</update>
	<!-- 페이징 관련 총 게시물 구하는 쿼리 --> 
	<select id="getPostCount" resultType="int">
		select count(*) from tbmall_board where board_delete =0
	</select>
	
	
	<!-- 모든 댓글 리스트 가져오기 (보고 있는 글 번호)-->
	 <select id="getCommentList" parameterType="com.spring.dto.PagingDto" resultType="com.spring.dto.CommentDto">
		SELECT 
        c.comment_no,
        c.item_id,
        c.member_no,
        c.comment_content,
        c.comment_writedate,
        r.reviewpoint_amount 
    FROM tbmall_comment c
    INNER JOIN tbmall_stuff b 
        ON c.item_id = b.item_id
    LEFT JOIN tbmall_reviewpoint r  
        ON c.comment_no = r.comment_no 
        AND c.member_no = r.member_no  
    WHERE c.item_id = #{item_id}  
    LIMIT #{pagingDto.limit} OFFSET #{pagingDto.offset};
	</select> 
	<!--댓글 작성  -->
	 <insert id="writeComment" parameterType="com.spring.dto.CommentDto" useGeneratedKeys="true" keyProperty="comment_no">
		INSERT INTO tbmall_comment
			(item_id,
			member_no,
			comment_content,
			comment_writedate)
			VALUES
			(#{item_id},
			#{member_no},
			#{comment_content},
			CURRENT_TIMESTAMP
			)
	</insert> 
	<!-- (관리자 기능) 다른 유저 글 로그 보기 -->
	
	
	<!-- 페이징 관련 총 댓글 게시물 구하는 쿼리 -->
	 <select id="getCommentCount" parameterType="long" resultType="int">	
		SELECT 
			count(*)
		FROM tbmall_comment c
		INNER JOIN tbmall_stuff b 
		ON c.item_id = b.item_id
		WHERE c.item_id = #{item_id}
	</select> 

	<!-- 댓글 삭제 -->
	<delete id="deleteComment" parameterType="long">
		DELETE FROM tbmall_comment 
		WHERE comment_no = #{comment_no}
	</delete>


	
	
	   <insert id="insertReviewPoint" parameterType="com.spring.dto.ReviewPointDto" >
    	INSERT INTO tbmall_reviewpoint(
    		comment_no,
    		member_no,
    		item_id,
    		reviewpoint_amount,
    		reviewpoint_writedate
    	) 
    	VALUES(
    		#{comment_no},
    		#{member_no},
    		#{item_id},
    		#{reviewpoint_amount},
    		CURRENT_TIMESTAMP
    	)
    </insert>
    
    
    <!-- 댓글 정보를 통해서 해당 물건의 별점 정보 가져오기 -->
    <select id="getReviewPointList" parameterType="Long" resultType="com.spring.dto.ReviewPointDto" >
    	SELECT 
    		c.comment_no,
   			c.member_no AS commenter_member_no,
    		c.item_id,
    		c.comment_content,
    		c.comment_writedate,
    		r.reviewpoint_no,
    		r.reviewpoint_amount,
    		r.reviewpoint_writedate
		FROM tbmall_comment c
		JOIN tbmall_reviewpoint r 
    	ON c.comment_no = r.comment_no 
    	AND c.member_no = r.member_no  
		WHERE c.item_id = #{item_id};
    </select>
	

</mapper>