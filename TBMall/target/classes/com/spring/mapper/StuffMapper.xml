<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.StuffMapper">
    <!-- 물건 목록 조회 -->
    <select id="getItemList" resultType="com.spring.dto.StuffDto">
        SELECT 
            item_id as itemId,
            item_name as itemName,
            price,
            stock,
            description
        FROM 
            tbl_stuff
        WHERE 
            deleted = 0
        ORDER BY 
            item_id DESC
    </select>
    
    <!-- 물건 등록 -->
    <insert id="registerItem">
        INSERT INTO tbl_stuff (
            item_name,
            price,
            stock,
            description
        ) VALUES (
            #{itemName},
            #{price},
            #{stock},
            #{description}
        )
    </insert>
    
    <!-- 장바구니에 추가 -->
    <insert id="addToCart">
        INSERT INTO tbl_cart (
            item_id,
            user_id,
            quantity,
            price
        ) VALUES (
            #{itemId},
            #{userId},
            #{quantity},
            (SELECT price FROM tbl_stuff WHERE item_id = #{itemId})
        )
        ON DUPLICATE KEY UPDATE
            quantity = quantity + VALUES(quantity),
            price = VALUES(price)
    </insert>
    
    <!-- 장바구니 조회 -->
    <select id="getCartItems" resultType="com.spring.dto.CartDto">
        SELECT 
            c.cart_id as cartId,
            c.item_id as itemId,
            c.user_id as userId,
            c.quantity,
            c.price,
            s.item_name as itemName,
            (c.quantity * c.price) as totalPrice
        FROM 
            tbl_cart c
            JOIN tbl_stuff s ON c.item_id = s.item_id
        WHERE 
            c.user_id = #{userId}
    </select>
    
    <!-- 장바구니에서 제거 -->
    <delete id="removeFromCart">
        DELETE FROM tbl_cart 
        WHERE cart_id = #{cartId}
    </delete>
    
    <!-- 재고 확인 -->
    <select id="checkStock" resultType="int">
        SELECT stock 
        FROM tbl_stuff 
        WHERE item_id = #{itemId}
    </select>
    
    <!-- 재고 업데이트 -->
    <update id="updateStock">
        UPDATE tbl_stuff 
        SET stock = stock - #{quantity},
            deleted = CASE 
                WHEN (stock - #{quantity}) &lt;= 0 THEN 1 
                ELSE deleted 
            END
        WHERE item_id = #{itemId}
    </update>
    <!-- 주문 생성 -->
    <insert id="createOrder" parameterType="long">
        INSERT INTO tbl_orders (
            user_id, 
            item_id, 
            quantity, 
            price
        )
        SELECT 
            c.user_id, 
            c.item_id, 
            c.quantity, 
            c.price
        FROM tbl_cart c
        WHERE c.user_id = #{userId}
    </insert>
    
    <!-- 장바구니 비우기 -->
    <delete id="clearCart">
        DELETE FROM tbl_cart 
        WHERE user_id = #{userId}
    </delete>
    
    <!-- 물건 삭제 -->
    <update id="deleteItem">
        UPDATE tbl_stuff SET deleted = 1 WHERE item_id = #{itemId}
    </update>
    
    <!-- 물건 수정 -->
    <update id="updateItem">
        UPDATE tbl_stuff 
        SET item_name = #{itemName}, 
            price = #{price}, 
            stock = #{stock},
            description = #{description}
        WHERE item_id = #{itemId}
    </update>
    
    <!-- 물건 조회 -->
    <select id="getItem" resultType="com.spring.dto.StuffDto">
        SELECT 
            item_id as itemId,
            item_name as itemName,
            price,
            stock,
            description,
            deleted
        FROM tbl_stuff 
        WHERE item_id = #{itemId}
    </select>
    
    <!-- 삭제된 물건 목록 -->
    <select id="getDeletedItemList" resultType="com.spring.dto.StuffDto">
        SELECT 
            item_id as itemId,
            item_name as itemName,
            price,
            stock,
            description,
            deleted
        FROM tbl_stuff 
        WHERE deleted = 1
        ORDER BY item_id DESC
    </select>
    
    <!-- 물건 복구 -->
    <update id="restoreItem">
        UPDATE tbl_stuff 
        SET deleted = 0,
            stock = 1
        WHERE item_id = #{itemId}
    </update>
    
    <!-- 장바구니 아이템 단일 조회 -->
    <select id="getCartItem" resultType="com.spring.dto.CartDto">
        SELECT 
            c.cart_id as cartId,
            c.item_id as itemId,
            c.user_id as userId,
            c.quantity,
            c.price,
            s.item_name as itemName,
            (c.quantity * c.price) as totalPrice
        FROM 
            tbl_cart c
            JOIN tbl_stuff s ON c.item_id = s.item_id
        WHERE 
            c.cart_id = #{cartId}
    </select>
    
    <!-- 장바구니 수량 업데이트 -->
    <update id="updateCartItemQuantity">
        UPDATE tbl_cart 
        SET quantity = #{quantity}
        WHERE cart_id = #{cartId}
    </update>
</mapper> 